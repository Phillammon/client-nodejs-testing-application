// source: protobuf/query.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var protobuf_answer_pb = require('../protobuf/answer_pb.js');
goog.object.extend(proto, protobuf_answer_pb);
var protobuf_options_pb = require('../protobuf/options_pb.js');
goog.object.extend(proto, protobuf_options_pb);
goog.exportSymbol('proto.grakn.protocol.Graql', null, global);
goog.exportSymbol('proto.grakn.protocol.Graql.Define', null, global);
goog.exportSymbol('proto.grakn.protocol.Graql.Define.Req', null, global);
goog.exportSymbol('proto.grakn.protocol.Graql.Define.Res', null, global);
goog.exportSymbol('proto.grakn.protocol.Graql.Delete', null, global);
goog.exportSymbol('proto.grakn.protocol.Graql.Delete.Req', null, global);
goog.exportSymbol('proto.grakn.protocol.Graql.Delete.Res', null, global);
goog.exportSymbol('proto.grakn.protocol.Graql.Insert', null, global);
goog.exportSymbol('proto.grakn.protocol.Graql.Insert.Req', null, global);
goog.exportSymbol('proto.grakn.protocol.Graql.Insert.Res', null, global);
goog.exportSymbol('proto.grakn.protocol.Graql.Match', null, global);
goog.exportSymbol('proto.grakn.protocol.Graql.Match.Req', null, global);
goog.exportSymbol('proto.grakn.protocol.Graql.Match.Res', null, global);
goog.exportSymbol('proto.grakn.protocol.Graql.Undefine', null, global);
goog.exportSymbol('proto.grakn.protocol.Graql.Undefine.Req', null, global);
goog.exportSymbol('proto.grakn.protocol.Graql.Undefine.Res', null, global);
goog.exportSymbol('proto.grakn.protocol.Query', null, global);
goog.exportSymbol('proto.grakn.protocol.Query.Req', null, global);
goog.exportSymbol('proto.grakn.protocol.Query.Req.ReqCase', null, global);
goog.exportSymbol('proto.grakn.protocol.Query.Res', null, global);
goog.exportSymbol('proto.grakn.protocol.Query.Res.ResCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grakn.protocol.Query = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grakn.protocol.Query, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grakn.protocol.Query.displayName = 'proto.grakn.protocol.Query';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grakn.protocol.Query.Req = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.grakn.protocol.Query.Req.oneofGroups_);
};
goog.inherits(proto.grakn.protocol.Query.Req, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grakn.protocol.Query.Req.displayName = 'proto.grakn.protocol.Query.Req';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grakn.protocol.Query.Res = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.grakn.protocol.Query.Res.oneofGroups_);
};
goog.inherits(proto.grakn.protocol.Query.Res, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grakn.protocol.Query.Res.displayName = 'proto.grakn.protocol.Query.Res';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grakn.protocol.Graql = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grakn.protocol.Graql, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grakn.protocol.Graql.displayName = 'proto.grakn.protocol.Graql';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grakn.protocol.Graql.Match = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grakn.protocol.Graql.Match, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grakn.protocol.Graql.Match.displayName = 'proto.grakn.protocol.Graql.Match';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grakn.protocol.Graql.Match.Req = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grakn.protocol.Graql.Match.Req, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grakn.protocol.Graql.Match.Req.displayName = 'proto.grakn.protocol.Graql.Match.Req';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grakn.protocol.Graql.Match.Res = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.grakn.protocol.Graql.Match.Res.repeatedFields_, null);
};
goog.inherits(proto.grakn.protocol.Graql.Match.Res, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grakn.protocol.Graql.Match.Res.displayName = 'proto.grakn.protocol.Graql.Match.Res';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grakn.protocol.Graql.Insert = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grakn.protocol.Graql.Insert, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grakn.protocol.Graql.Insert.displayName = 'proto.grakn.protocol.Graql.Insert';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grakn.protocol.Graql.Insert.Req = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grakn.protocol.Graql.Insert.Req, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grakn.protocol.Graql.Insert.Req.displayName = 'proto.grakn.protocol.Graql.Insert.Req';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grakn.protocol.Graql.Insert.Res = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.grakn.protocol.Graql.Insert.Res.repeatedFields_, null);
};
goog.inherits(proto.grakn.protocol.Graql.Insert.Res, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grakn.protocol.Graql.Insert.Res.displayName = 'proto.grakn.protocol.Graql.Insert.Res';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grakn.protocol.Graql.Delete = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grakn.protocol.Graql.Delete, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grakn.protocol.Graql.Delete.displayName = 'proto.grakn.protocol.Graql.Delete';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grakn.protocol.Graql.Delete.Req = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grakn.protocol.Graql.Delete.Req, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grakn.protocol.Graql.Delete.Req.displayName = 'proto.grakn.protocol.Graql.Delete.Req';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grakn.protocol.Graql.Delete.Res = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grakn.protocol.Graql.Delete.Res, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grakn.protocol.Graql.Delete.Res.displayName = 'proto.grakn.protocol.Graql.Delete.Res';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grakn.protocol.Graql.Define = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grakn.protocol.Graql.Define, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grakn.protocol.Graql.Define.displayName = 'proto.grakn.protocol.Graql.Define';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grakn.protocol.Graql.Define.Req = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grakn.protocol.Graql.Define.Req, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grakn.protocol.Graql.Define.Req.displayName = 'proto.grakn.protocol.Graql.Define.Req';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grakn.protocol.Graql.Define.Res = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grakn.protocol.Graql.Define.Res, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grakn.protocol.Graql.Define.Res.displayName = 'proto.grakn.protocol.Graql.Define.Res';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grakn.protocol.Graql.Undefine = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grakn.protocol.Graql.Undefine, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grakn.protocol.Graql.Undefine.displayName = 'proto.grakn.protocol.Graql.Undefine';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grakn.protocol.Graql.Undefine.Req = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grakn.protocol.Graql.Undefine.Req, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grakn.protocol.Graql.Undefine.Req.displayName = 'proto.grakn.protocol.Graql.Undefine.Req';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grakn.protocol.Graql.Undefine.Res = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grakn.protocol.Graql.Undefine.Res, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grakn.protocol.Graql.Undefine.Res.displayName = 'proto.grakn.protocol.Graql.Undefine.Res';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grakn.protocol.Query.prototype.toObject = function(opt_includeInstance) {
  return proto.grakn.protocol.Query.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grakn.protocol.Query} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Query.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grakn.protocol.Query}
 */
proto.grakn.protocol.Query.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grakn.protocol.Query;
  return proto.grakn.protocol.Query.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grakn.protocol.Query} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grakn.protocol.Query}
 */
proto.grakn.protocol.Query.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grakn.protocol.Query.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grakn.protocol.Query.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grakn.protocol.Query} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Query.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.grakn.protocol.Query.Req.oneofGroups_ = [[100,101,102,103,104]];

/**
 * @enum {number}
 */
proto.grakn.protocol.Query.Req.ReqCase = {
  REQ_NOT_SET: 0,
  DELETE_REQ: 100,
  DEFINE_REQ: 101,
  UNDEFINE_REQ: 102,
  MATCH_REQ: 103,
  INSERT_REQ: 104
};

/**
 * @return {proto.grakn.protocol.Query.Req.ReqCase}
 */
proto.grakn.protocol.Query.Req.prototype.getReqCase = function() {
  return /** @type {proto.grakn.protocol.Query.Req.ReqCase} */(jspb.Message.computeOneofCase(this, proto.grakn.protocol.Query.Req.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grakn.protocol.Query.Req.prototype.toObject = function(opt_includeInstance) {
  return proto.grakn.protocol.Query.Req.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grakn.protocol.Query.Req} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Query.Req.toObject = function(includeInstance, msg) {
  var f, obj = {
    options: (f = msg.getOptions()) && protobuf_options_pb.Options.toObject(includeInstance, f),
    deleteReq: (f = msg.getDeleteReq()) && proto.grakn.protocol.Graql.Delete.Req.toObject(includeInstance, f),
    defineReq: (f = msg.getDefineReq()) && proto.grakn.protocol.Graql.Define.Req.toObject(includeInstance, f),
    undefineReq: (f = msg.getUndefineReq()) && proto.grakn.protocol.Graql.Undefine.Req.toObject(includeInstance, f),
    matchReq: (f = msg.getMatchReq()) && proto.grakn.protocol.Graql.Match.Req.toObject(includeInstance, f),
    insertReq: (f = msg.getInsertReq()) && proto.grakn.protocol.Graql.Insert.Req.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grakn.protocol.Query.Req}
 */
proto.grakn.protocol.Query.Req.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grakn.protocol.Query.Req;
  return proto.grakn.protocol.Query.Req.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grakn.protocol.Query.Req} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grakn.protocol.Query.Req}
 */
proto.grakn.protocol.Query.Req.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new protobuf_options_pb.Options;
      reader.readMessage(value,protobuf_options_pb.Options.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    case 100:
      var value = new proto.grakn.protocol.Graql.Delete.Req;
      reader.readMessage(value,proto.grakn.protocol.Graql.Delete.Req.deserializeBinaryFromReader);
      msg.setDeleteReq(value);
      break;
    case 101:
      var value = new proto.grakn.protocol.Graql.Define.Req;
      reader.readMessage(value,proto.grakn.protocol.Graql.Define.Req.deserializeBinaryFromReader);
      msg.setDefineReq(value);
      break;
    case 102:
      var value = new proto.grakn.protocol.Graql.Undefine.Req;
      reader.readMessage(value,proto.grakn.protocol.Graql.Undefine.Req.deserializeBinaryFromReader);
      msg.setUndefineReq(value);
      break;
    case 103:
      var value = new proto.grakn.protocol.Graql.Match.Req;
      reader.readMessage(value,proto.grakn.protocol.Graql.Match.Req.deserializeBinaryFromReader);
      msg.setMatchReq(value);
      break;
    case 104:
      var value = new proto.grakn.protocol.Graql.Insert.Req;
      reader.readMessage(value,proto.grakn.protocol.Graql.Insert.Req.deserializeBinaryFromReader);
      msg.setInsertReq(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grakn.protocol.Query.Req.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grakn.protocol.Query.Req.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grakn.protocol.Query.Req} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Query.Req.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      protobuf_options_pb.Options.serializeBinaryToWriter
    );
  }
  f = message.getDeleteReq();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.grakn.protocol.Graql.Delete.Req.serializeBinaryToWriter
    );
  }
  f = message.getDefineReq();
  if (f != null) {
    writer.writeMessage(
      101,
      f,
      proto.grakn.protocol.Graql.Define.Req.serializeBinaryToWriter
    );
  }
  f = message.getUndefineReq();
  if (f != null) {
    writer.writeMessage(
      102,
      f,
      proto.grakn.protocol.Graql.Undefine.Req.serializeBinaryToWriter
    );
  }
  f = message.getMatchReq();
  if (f != null) {
    writer.writeMessage(
      103,
      f,
      proto.grakn.protocol.Graql.Match.Req.serializeBinaryToWriter
    );
  }
  f = message.getInsertReq();
  if (f != null) {
    writer.writeMessage(
      104,
      f,
      proto.grakn.protocol.Graql.Insert.Req.serializeBinaryToWriter
    );
  }
};


/**
 * optional Options options = 1;
 * @return {?proto.grakn.protocol.Options}
 */
proto.grakn.protocol.Query.Req.prototype.getOptions = function() {
  return /** @type{?proto.grakn.protocol.Options} */ (
    jspb.Message.getWrapperField(this, protobuf_options_pb.Options, 1));
};


/**
 * @param {?proto.grakn.protocol.Options|undefined} value
 * @return {!proto.grakn.protocol.Query.Req} returns this
*/
proto.grakn.protocol.Query.Req.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grakn.protocol.Query.Req} returns this
 */
proto.grakn.protocol.Query.Req.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grakn.protocol.Query.Req.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Graql.Delete.Req delete_req = 100;
 * @return {?proto.grakn.protocol.Graql.Delete.Req}
 */
proto.grakn.protocol.Query.Req.prototype.getDeleteReq = function() {
  return /** @type{?proto.grakn.protocol.Graql.Delete.Req} */ (
    jspb.Message.getWrapperField(this, proto.grakn.protocol.Graql.Delete.Req, 100));
};


/**
 * @param {?proto.grakn.protocol.Graql.Delete.Req|undefined} value
 * @return {!proto.grakn.protocol.Query.Req} returns this
*/
proto.grakn.protocol.Query.Req.prototype.setDeleteReq = function(value) {
  return jspb.Message.setOneofWrapperField(this, 100, proto.grakn.protocol.Query.Req.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grakn.protocol.Query.Req} returns this
 */
proto.grakn.protocol.Query.Req.prototype.clearDeleteReq = function() {
  return this.setDeleteReq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grakn.protocol.Query.Req.prototype.hasDeleteReq = function() {
  return jspb.Message.getField(this, 100) != null;
};


/**
 * optional Graql.Define.Req define_req = 101;
 * @return {?proto.grakn.protocol.Graql.Define.Req}
 */
proto.grakn.protocol.Query.Req.prototype.getDefineReq = function() {
  return /** @type{?proto.grakn.protocol.Graql.Define.Req} */ (
    jspb.Message.getWrapperField(this, proto.grakn.protocol.Graql.Define.Req, 101));
};


/**
 * @param {?proto.grakn.protocol.Graql.Define.Req|undefined} value
 * @return {!proto.grakn.protocol.Query.Req} returns this
*/
proto.grakn.protocol.Query.Req.prototype.setDefineReq = function(value) {
  return jspb.Message.setOneofWrapperField(this, 101, proto.grakn.protocol.Query.Req.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grakn.protocol.Query.Req} returns this
 */
proto.grakn.protocol.Query.Req.prototype.clearDefineReq = function() {
  return this.setDefineReq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grakn.protocol.Query.Req.prototype.hasDefineReq = function() {
  return jspb.Message.getField(this, 101) != null;
};


/**
 * optional Graql.Undefine.Req undefine_req = 102;
 * @return {?proto.grakn.protocol.Graql.Undefine.Req}
 */
proto.grakn.protocol.Query.Req.prototype.getUndefineReq = function() {
  return /** @type{?proto.grakn.protocol.Graql.Undefine.Req} */ (
    jspb.Message.getWrapperField(this, proto.grakn.protocol.Graql.Undefine.Req, 102));
};


/**
 * @param {?proto.grakn.protocol.Graql.Undefine.Req|undefined} value
 * @return {!proto.grakn.protocol.Query.Req} returns this
*/
proto.grakn.protocol.Query.Req.prototype.setUndefineReq = function(value) {
  return jspb.Message.setOneofWrapperField(this, 102, proto.grakn.protocol.Query.Req.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grakn.protocol.Query.Req} returns this
 */
proto.grakn.protocol.Query.Req.prototype.clearUndefineReq = function() {
  return this.setUndefineReq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grakn.protocol.Query.Req.prototype.hasUndefineReq = function() {
  return jspb.Message.getField(this, 102) != null;
};


/**
 * optional Graql.Match.Req match_req = 103;
 * @return {?proto.grakn.protocol.Graql.Match.Req}
 */
proto.grakn.protocol.Query.Req.prototype.getMatchReq = function() {
  return /** @type{?proto.grakn.protocol.Graql.Match.Req} */ (
    jspb.Message.getWrapperField(this, proto.grakn.protocol.Graql.Match.Req, 103));
};


/**
 * @param {?proto.grakn.protocol.Graql.Match.Req|undefined} value
 * @return {!proto.grakn.protocol.Query.Req} returns this
*/
proto.grakn.protocol.Query.Req.prototype.setMatchReq = function(value) {
  return jspb.Message.setOneofWrapperField(this, 103, proto.grakn.protocol.Query.Req.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grakn.protocol.Query.Req} returns this
 */
proto.grakn.protocol.Query.Req.prototype.clearMatchReq = function() {
  return this.setMatchReq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grakn.protocol.Query.Req.prototype.hasMatchReq = function() {
  return jspb.Message.getField(this, 103) != null;
};


/**
 * optional Graql.Insert.Req insert_req = 104;
 * @return {?proto.grakn.protocol.Graql.Insert.Req}
 */
proto.grakn.protocol.Query.Req.prototype.getInsertReq = function() {
  return /** @type{?proto.grakn.protocol.Graql.Insert.Req} */ (
    jspb.Message.getWrapperField(this, proto.grakn.protocol.Graql.Insert.Req, 104));
};


/**
 * @param {?proto.grakn.protocol.Graql.Insert.Req|undefined} value
 * @return {!proto.grakn.protocol.Query.Req} returns this
*/
proto.grakn.protocol.Query.Req.prototype.setInsertReq = function(value) {
  return jspb.Message.setOneofWrapperField(this, 104, proto.grakn.protocol.Query.Req.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grakn.protocol.Query.Req} returns this
 */
proto.grakn.protocol.Query.Req.prototype.clearInsertReq = function() {
  return this.setInsertReq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grakn.protocol.Query.Req.prototype.hasInsertReq = function() {
  return jspb.Message.getField(this, 104) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.grakn.protocol.Query.Res.oneofGroups_ = [[100,101,102,103,104]];

/**
 * @enum {number}
 */
proto.grakn.protocol.Query.Res.ResCase = {
  RES_NOT_SET: 0,
  DELETE_RES: 100,
  DEFINE_RES: 101,
  UNDEFINE_RES: 102,
  MATCH_RES: 103,
  INSERT_RES: 104
};

/**
 * @return {proto.grakn.protocol.Query.Res.ResCase}
 */
proto.grakn.protocol.Query.Res.prototype.getResCase = function() {
  return /** @type {proto.grakn.protocol.Query.Res.ResCase} */(jspb.Message.computeOneofCase(this, proto.grakn.protocol.Query.Res.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grakn.protocol.Query.Res.prototype.toObject = function(opt_includeInstance) {
  return proto.grakn.protocol.Query.Res.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grakn.protocol.Query.Res} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Query.Res.toObject = function(includeInstance, msg) {
  var f, obj = {
    deleteRes: (f = msg.getDeleteRes()) && proto.grakn.protocol.Graql.Delete.Res.toObject(includeInstance, f),
    defineRes: (f = msg.getDefineRes()) && proto.grakn.protocol.Graql.Define.Res.toObject(includeInstance, f),
    undefineRes: (f = msg.getUndefineRes()) && proto.grakn.protocol.Graql.Undefine.Res.toObject(includeInstance, f),
    matchRes: (f = msg.getMatchRes()) && proto.grakn.protocol.Graql.Match.Res.toObject(includeInstance, f),
    insertRes: (f = msg.getInsertRes()) && proto.grakn.protocol.Graql.Insert.Res.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grakn.protocol.Query.Res}
 */
proto.grakn.protocol.Query.Res.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grakn.protocol.Query.Res;
  return proto.grakn.protocol.Query.Res.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grakn.protocol.Query.Res} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grakn.protocol.Query.Res}
 */
proto.grakn.protocol.Query.Res.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 100:
      var value = new proto.grakn.protocol.Graql.Delete.Res;
      reader.readMessage(value,proto.grakn.protocol.Graql.Delete.Res.deserializeBinaryFromReader);
      msg.setDeleteRes(value);
      break;
    case 101:
      var value = new proto.grakn.protocol.Graql.Define.Res;
      reader.readMessage(value,proto.grakn.protocol.Graql.Define.Res.deserializeBinaryFromReader);
      msg.setDefineRes(value);
      break;
    case 102:
      var value = new proto.grakn.protocol.Graql.Undefine.Res;
      reader.readMessage(value,proto.grakn.protocol.Graql.Undefine.Res.deserializeBinaryFromReader);
      msg.setUndefineRes(value);
      break;
    case 103:
      var value = new proto.grakn.protocol.Graql.Match.Res;
      reader.readMessage(value,proto.grakn.protocol.Graql.Match.Res.deserializeBinaryFromReader);
      msg.setMatchRes(value);
      break;
    case 104:
      var value = new proto.grakn.protocol.Graql.Insert.Res;
      reader.readMessage(value,proto.grakn.protocol.Graql.Insert.Res.deserializeBinaryFromReader);
      msg.setInsertRes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grakn.protocol.Query.Res.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grakn.protocol.Query.Res.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grakn.protocol.Query.Res} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Query.Res.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeleteRes();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.grakn.protocol.Graql.Delete.Res.serializeBinaryToWriter
    );
  }
  f = message.getDefineRes();
  if (f != null) {
    writer.writeMessage(
      101,
      f,
      proto.grakn.protocol.Graql.Define.Res.serializeBinaryToWriter
    );
  }
  f = message.getUndefineRes();
  if (f != null) {
    writer.writeMessage(
      102,
      f,
      proto.grakn.protocol.Graql.Undefine.Res.serializeBinaryToWriter
    );
  }
  f = message.getMatchRes();
  if (f != null) {
    writer.writeMessage(
      103,
      f,
      proto.grakn.protocol.Graql.Match.Res.serializeBinaryToWriter
    );
  }
  f = message.getInsertRes();
  if (f != null) {
    writer.writeMessage(
      104,
      f,
      proto.grakn.protocol.Graql.Insert.Res.serializeBinaryToWriter
    );
  }
};


/**
 * optional Graql.Delete.Res delete_res = 100;
 * @return {?proto.grakn.protocol.Graql.Delete.Res}
 */
proto.grakn.protocol.Query.Res.prototype.getDeleteRes = function() {
  return /** @type{?proto.grakn.protocol.Graql.Delete.Res} */ (
    jspb.Message.getWrapperField(this, proto.grakn.protocol.Graql.Delete.Res, 100));
};


/**
 * @param {?proto.grakn.protocol.Graql.Delete.Res|undefined} value
 * @return {!proto.grakn.protocol.Query.Res} returns this
*/
proto.grakn.protocol.Query.Res.prototype.setDeleteRes = function(value) {
  return jspb.Message.setOneofWrapperField(this, 100, proto.grakn.protocol.Query.Res.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grakn.protocol.Query.Res} returns this
 */
proto.grakn.protocol.Query.Res.prototype.clearDeleteRes = function() {
  return this.setDeleteRes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grakn.protocol.Query.Res.prototype.hasDeleteRes = function() {
  return jspb.Message.getField(this, 100) != null;
};


/**
 * optional Graql.Define.Res define_res = 101;
 * @return {?proto.grakn.protocol.Graql.Define.Res}
 */
proto.grakn.protocol.Query.Res.prototype.getDefineRes = function() {
  return /** @type{?proto.grakn.protocol.Graql.Define.Res} */ (
    jspb.Message.getWrapperField(this, proto.grakn.protocol.Graql.Define.Res, 101));
};


/**
 * @param {?proto.grakn.protocol.Graql.Define.Res|undefined} value
 * @return {!proto.grakn.protocol.Query.Res} returns this
*/
proto.grakn.protocol.Query.Res.prototype.setDefineRes = function(value) {
  return jspb.Message.setOneofWrapperField(this, 101, proto.grakn.protocol.Query.Res.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grakn.protocol.Query.Res} returns this
 */
proto.grakn.protocol.Query.Res.prototype.clearDefineRes = function() {
  return this.setDefineRes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grakn.protocol.Query.Res.prototype.hasDefineRes = function() {
  return jspb.Message.getField(this, 101) != null;
};


/**
 * optional Graql.Undefine.Res undefine_res = 102;
 * @return {?proto.grakn.protocol.Graql.Undefine.Res}
 */
proto.grakn.protocol.Query.Res.prototype.getUndefineRes = function() {
  return /** @type{?proto.grakn.protocol.Graql.Undefine.Res} */ (
    jspb.Message.getWrapperField(this, proto.grakn.protocol.Graql.Undefine.Res, 102));
};


/**
 * @param {?proto.grakn.protocol.Graql.Undefine.Res|undefined} value
 * @return {!proto.grakn.protocol.Query.Res} returns this
*/
proto.grakn.protocol.Query.Res.prototype.setUndefineRes = function(value) {
  return jspb.Message.setOneofWrapperField(this, 102, proto.grakn.protocol.Query.Res.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grakn.protocol.Query.Res} returns this
 */
proto.grakn.protocol.Query.Res.prototype.clearUndefineRes = function() {
  return this.setUndefineRes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grakn.protocol.Query.Res.prototype.hasUndefineRes = function() {
  return jspb.Message.getField(this, 102) != null;
};


/**
 * optional Graql.Match.Res match_res = 103;
 * @return {?proto.grakn.protocol.Graql.Match.Res}
 */
proto.grakn.protocol.Query.Res.prototype.getMatchRes = function() {
  return /** @type{?proto.grakn.protocol.Graql.Match.Res} */ (
    jspb.Message.getWrapperField(this, proto.grakn.protocol.Graql.Match.Res, 103));
};


/**
 * @param {?proto.grakn.protocol.Graql.Match.Res|undefined} value
 * @return {!proto.grakn.protocol.Query.Res} returns this
*/
proto.grakn.protocol.Query.Res.prototype.setMatchRes = function(value) {
  return jspb.Message.setOneofWrapperField(this, 103, proto.grakn.protocol.Query.Res.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grakn.protocol.Query.Res} returns this
 */
proto.grakn.protocol.Query.Res.prototype.clearMatchRes = function() {
  return this.setMatchRes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grakn.protocol.Query.Res.prototype.hasMatchRes = function() {
  return jspb.Message.getField(this, 103) != null;
};


/**
 * optional Graql.Insert.Res insert_res = 104;
 * @return {?proto.grakn.protocol.Graql.Insert.Res}
 */
proto.grakn.protocol.Query.Res.prototype.getInsertRes = function() {
  return /** @type{?proto.grakn.protocol.Graql.Insert.Res} */ (
    jspb.Message.getWrapperField(this, proto.grakn.protocol.Graql.Insert.Res, 104));
};


/**
 * @param {?proto.grakn.protocol.Graql.Insert.Res|undefined} value
 * @return {!proto.grakn.protocol.Query.Res} returns this
*/
proto.grakn.protocol.Query.Res.prototype.setInsertRes = function(value) {
  return jspb.Message.setOneofWrapperField(this, 104, proto.grakn.protocol.Query.Res.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grakn.protocol.Query.Res} returns this
 */
proto.grakn.protocol.Query.Res.prototype.clearInsertRes = function() {
  return this.setInsertRes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grakn.protocol.Query.Res.prototype.hasInsertRes = function() {
  return jspb.Message.getField(this, 104) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grakn.protocol.Graql.prototype.toObject = function(opt_includeInstance) {
  return proto.grakn.protocol.Graql.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grakn.protocol.Graql} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Graql.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grakn.protocol.Graql}
 */
proto.grakn.protocol.Graql.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grakn.protocol.Graql;
  return proto.grakn.protocol.Graql.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grakn.protocol.Graql} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grakn.protocol.Graql}
 */
proto.grakn.protocol.Graql.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grakn.protocol.Graql.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grakn.protocol.Graql.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grakn.protocol.Graql} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Graql.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grakn.protocol.Graql.Match.prototype.toObject = function(opt_includeInstance) {
  return proto.grakn.protocol.Graql.Match.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grakn.protocol.Graql.Match} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Graql.Match.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grakn.protocol.Graql.Match}
 */
proto.grakn.protocol.Graql.Match.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grakn.protocol.Graql.Match;
  return proto.grakn.protocol.Graql.Match.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grakn.protocol.Graql.Match} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grakn.protocol.Graql.Match}
 */
proto.grakn.protocol.Graql.Match.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grakn.protocol.Graql.Match.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grakn.protocol.Graql.Match.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grakn.protocol.Graql.Match} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Graql.Match.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grakn.protocol.Graql.Match.Req.prototype.toObject = function(opt_includeInstance) {
  return proto.grakn.protocol.Graql.Match.Req.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grakn.protocol.Graql.Match.Req} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Graql.Match.Req.toObject = function(includeInstance, msg) {
  var f, obj = {
    query: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grakn.protocol.Graql.Match.Req}
 */
proto.grakn.protocol.Graql.Match.Req.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grakn.protocol.Graql.Match.Req;
  return proto.grakn.protocol.Graql.Match.Req.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grakn.protocol.Graql.Match.Req} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grakn.protocol.Graql.Match.Req}
 */
proto.grakn.protocol.Graql.Match.Req.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuery(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grakn.protocol.Graql.Match.Req.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grakn.protocol.Graql.Match.Req.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grakn.protocol.Graql.Match.Req} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Graql.Match.Req.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuery();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string query = 1;
 * @return {string}
 */
proto.grakn.protocol.Graql.Match.Req.prototype.getQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.grakn.protocol.Graql.Match.Req} returns this
 */
proto.grakn.protocol.Graql.Match.Req.prototype.setQuery = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.grakn.protocol.Graql.Match.Res.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grakn.protocol.Graql.Match.Res.prototype.toObject = function(opt_includeInstance) {
  return proto.grakn.protocol.Graql.Match.Res.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grakn.protocol.Graql.Match.Res} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Graql.Match.Res.toObject = function(includeInstance, msg) {
  var f, obj = {
    answerList: jspb.Message.toObjectList(msg.getAnswerList(),
    protobuf_answer_pb.ConceptMap.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grakn.protocol.Graql.Match.Res}
 */
proto.grakn.protocol.Graql.Match.Res.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grakn.protocol.Graql.Match.Res;
  return proto.grakn.protocol.Graql.Match.Res.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grakn.protocol.Graql.Match.Res} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grakn.protocol.Graql.Match.Res}
 */
proto.grakn.protocol.Graql.Match.Res.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new protobuf_answer_pb.ConceptMap;
      reader.readMessage(value,protobuf_answer_pb.ConceptMap.deserializeBinaryFromReader);
      msg.addAnswer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grakn.protocol.Graql.Match.Res.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grakn.protocol.Graql.Match.Res.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grakn.protocol.Graql.Match.Res} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Graql.Match.Res.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAnswerList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      protobuf_answer_pb.ConceptMap.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ConceptMap answer = 1;
 * @return {!Array<!proto.grakn.protocol.ConceptMap>}
 */
proto.grakn.protocol.Graql.Match.Res.prototype.getAnswerList = function() {
  return /** @type{!Array<!proto.grakn.protocol.ConceptMap>} */ (
    jspb.Message.getRepeatedWrapperField(this, protobuf_answer_pb.ConceptMap, 1));
};


/**
 * @param {!Array<!proto.grakn.protocol.ConceptMap>} value
 * @return {!proto.grakn.protocol.Graql.Match.Res} returns this
*/
proto.grakn.protocol.Graql.Match.Res.prototype.setAnswerList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.grakn.protocol.ConceptMap=} opt_value
 * @param {number=} opt_index
 * @return {!proto.grakn.protocol.ConceptMap}
 */
proto.grakn.protocol.Graql.Match.Res.prototype.addAnswer = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.grakn.protocol.ConceptMap, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.grakn.protocol.Graql.Match.Res} returns this
 */
proto.grakn.protocol.Graql.Match.Res.prototype.clearAnswerList = function() {
  return this.setAnswerList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grakn.protocol.Graql.Insert.prototype.toObject = function(opt_includeInstance) {
  return proto.grakn.protocol.Graql.Insert.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grakn.protocol.Graql.Insert} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Graql.Insert.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grakn.protocol.Graql.Insert}
 */
proto.grakn.protocol.Graql.Insert.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grakn.protocol.Graql.Insert;
  return proto.grakn.protocol.Graql.Insert.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grakn.protocol.Graql.Insert} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grakn.protocol.Graql.Insert}
 */
proto.grakn.protocol.Graql.Insert.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grakn.protocol.Graql.Insert.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grakn.protocol.Graql.Insert.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grakn.protocol.Graql.Insert} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Graql.Insert.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grakn.protocol.Graql.Insert.Req.prototype.toObject = function(opt_includeInstance) {
  return proto.grakn.protocol.Graql.Insert.Req.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grakn.protocol.Graql.Insert.Req} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Graql.Insert.Req.toObject = function(includeInstance, msg) {
  var f, obj = {
    query: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grakn.protocol.Graql.Insert.Req}
 */
proto.grakn.protocol.Graql.Insert.Req.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grakn.protocol.Graql.Insert.Req;
  return proto.grakn.protocol.Graql.Insert.Req.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grakn.protocol.Graql.Insert.Req} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grakn.protocol.Graql.Insert.Req}
 */
proto.grakn.protocol.Graql.Insert.Req.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuery(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grakn.protocol.Graql.Insert.Req.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grakn.protocol.Graql.Insert.Req.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grakn.protocol.Graql.Insert.Req} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Graql.Insert.Req.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuery();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string query = 1;
 * @return {string}
 */
proto.grakn.protocol.Graql.Insert.Req.prototype.getQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.grakn.protocol.Graql.Insert.Req} returns this
 */
proto.grakn.protocol.Graql.Insert.Req.prototype.setQuery = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.grakn.protocol.Graql.Insert.Res.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grakn.protocol.Graql.Insert.Res.prototype.toObject = function(opt_includeInstance) {
  return proto.grakn.protocol.Graql.Insert.Res.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grakn.protocol.Graql.Insert.Res} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Graql.Insert.Res.toObject = function(includeInstance, msg) {
  var f, obj = {
    answerList: jspb.Message.toObjectList(msg.getAnswerList(),
    protobuf_answer_pb.ConceptMap.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grakn.protocol.Graql.Insert.Res}
 */
proto.grakn.protocol.Graql.Insert.Res.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grakn.protocol.Graql.Insert.Res;
  return proto.grakn.protocol.Graql.Insert.Res.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grakn.protocol.Graql.Insert.Res} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grakn.protocol.Graql.Insert.Res}
 */
proto.grakn.protocol.Graql.Insert.Res.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new protobuf_answer_pb.ConceptMap;
      reader.readMessage(value,protobuf_answer_pb.ConceptMap.deserializeBinaryFromReader);
      msg.addAnswer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grakn.protocol.Graql.Insert.Res.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grakn.protocol.Graql.Insert.Res.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grakn.protocol.Graql.Insert.Res} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Graql.Insert.Res.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAnswerList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      protobuf_answer_pb.ConceptMap.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ConceptMap answer = 1;
 * @return {!Array<!proto.grakn.protocol.ConceptMap>}
 */
proto.grakn.protocol.Graql.Insert.Res.prototype.getAnswerList = function() {
  return /** @type{!Array<!proto.grakn.protocol.ConceptMap>} */ (
    jspb.Message.getRepeatedWrapperField(this, protobuf_answer_pb.ConceptMap, 1));
};


/**
 * @param {!Array<!proto.grakn.protocol.ConceptMap>} value
 * @return {!proto.grakn.protocol.Graql.Insert.Res} returns this
*/
proto.grakn.protocol.Graql.Insert.Res.prototype.setAnswerList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.grakn.protocol.ConceptMap=} opt_value
 * @param {number=} opt_index
 * @return {!proto.grakn.protocol.ConceptMap}
 */
proto.grakn.protocol.Graql.Insert.Res.prototype.addAnswer = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.grakn.protocol.ConceptMap, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.grakn.protocol.Graql.Insert.Res} returns this
 */
proto.grakn.protocol.Graql.Insert.Res.prototype.clearAnswerList = function() {
  return this.setAnswerList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grakn.protocol.Graql.Delete.prototype.toObject = function(opt_includeInstance) {
  return proto.grakn.protocol.Graql.Delete.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grakn.protocol.Graql.Delete} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Graql.Delete.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grakn.protocol.Graql.Delete}
 */
proto.grakn.protocol.Graql.Delete.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grakn.protocol.Graql.Delete;
  return proto.grakn.protocol.Graql.Delete.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grakn.protocol.Graql.Delete} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grakn.protocol.Graql.Delete}
 */
proto.grakn.protocol.Graql.Delete.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grakn.protocol.Graql.Delete.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grakn.protocol.Graql.Delete.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grakn.protocol.Graql.Delete} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Graql.Delete.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grakn.protocol.Graql.Delete.Req.prototype.toObject = function(opt_includeInstance) {
  return proto.grakn.protocol.Graql.Delete.Req.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grakn.protocol.Graql.Delete.Req} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Graql.Delete.Req.toObject = function(includeInstance, msg) {
  var f, obj = {
    query: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grakn.protocol.Graql.Delete.Req}
 */
proto.grakn.protocol.Graql.Delete.Req.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grakn.protocol.Graql.Delete.Req;
  return proto.grakn.protocol.Graql.Delete.Req.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grakn.protocol.Graql.Delete.Req} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grakn.protocol.Graql.Delete.Req}
 */
proto.grakn.protocol.Graql.Delete.Req.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuery(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grakn.protocol.Graql.Delete.Req.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grakn.protocol.Graql.Delete.Req.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grakn.protocol.Graql.Delete.Req} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Graql.Delete.Req.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuery();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string query = 1;
 * @return {string}
 */
proto.grakn.protocol.Graql.Delete.Req.prototype.getQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.grakn.protocol.Graql.Delete.Req} returns this
 */
proto.grakn.protocol.Graql.Delete.Req.prototype.setQuery = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grakn.protocol.Graql.Delete.Res.prototype.toObject = function(opt_includeInstance) {
  return proto.grakn.protocol.Graql.Delete.Res.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grakn.protocol.Graql.Delete.Res} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Graql.Delete.Res.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grakn.protocol.Graql.Delete.Res}
 */
proto.grakn.protocol.Graql.Delete.Res.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grakn.protocol.Graql.Delete.Res;
  return proto.grakn.protocol.Graql.Delete.Res.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grakn.protocol.Graql.Delete.Res} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grakn.protocol.Graql.Delete.Res}
 */
proto.grakn.protocol.Graql.Delete.Res.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grakn.protocol.Graql.Delete.Res.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grakn.protocol.Graql.Delete.Res.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grakn.protocol.Graql.Delete.Res} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Graql.Delete.Res.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grakn.protocol.Graql.Define.prototype.toObject = function(opt_includeInstance) {
  return proto.grakn.protocol.Graql.Define.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grakn.protocol.Graql.Define} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Graql.Define.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grakn.protocol.Graql.Define}
 */
proto.grakn.protocol.Graql.Define.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grakn.protocol.Graql.Define;
  return proto.grakn.protocol.Graql.Define.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grakn.protocol.Graql.Define} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grakn.protocol.Graql.Define}
 */
proto.grakn.protocol.Graql.Define.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grakn.protocol.Graql.Define.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grakn.protocol.Graql.Define.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grakn.protocol.Graql.Define} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Graql.Define.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grakn.protocol.Graql.Define.Req.prototype.toObject = function(opt_includeInstance) {
  return proto.grakn.protocol.Graql.Define.Req.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grakn.protocol.Graql.Define.Req} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Graql.Define.Req.toObject = function(includeInstance, msg) {
  var f, obj = {
    query: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grakn.protocol.Graql.Define.Req}
 */
proto.grakn.protocol.Graql.Define.Req.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grakn.protocol.Graql.Define.Req;
  return proto.grakn.protocol.Graql.Define.Req.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grakn.protocol.Graql.Define.Req} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grakn.protocol.Graql.Define.Req}
 */
proto.grakn.protocol.Graql.Define.Req.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuery(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grakn.protocol.Graql.Define.Req.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grakn.protocol.Graql.Define.Req.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grakn.protocol.Graql.Define.Req} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Graql.Define.Req.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuery();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string query = 1;
 * @return {string}
 */
proto.grakn.protocol.Graql.Define.Req.prototype.getQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.grakn.protocol.Graql.Define.Req} returns this
 */
proto.grakn.protocol.Graql.Define.Req.prototype.setQuery = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grakn.protocol.Graql.Define.Res.prototype.toObject = function(opt_includeInstance) {
  return proto.grakn.protocol.Graql.Define.Res.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grakn.protocol.Graql.Define.Res} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Graql.Define.Res.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grakn.protocol.Graql.Define.Res}
 */
proto.grakn.protocol.Graql.Define.Res.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grakn.protocol.Graql.Define.Res;
  return proto.grakn.protocol.Graql.Define.Res.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grakn.protocol.Graql.Define.Res} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grakn.protocol.Graql.Define.Res}
 */
proto.grakn.protocol.Graql.Define.Res.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grakn.protocol.Graql.Define.Res.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grakn.protocol.Graql.Define.Res.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grakn.protocol.Graql.Define.Res} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Graql.Define.Res.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grakn.protocol.Graql.Undefine.prototype.toObject = function(opt_includeInstance) {
  return proto.grakn.protocol.Graql.Undefine.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grakn.protocol.Graql.Undefine} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Graql.Undefine.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grakn.protocol.Graql.Undefine}
 */
proto.grakn.protocol.Graql.Undefine.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grakn.protocol.Graql.Undefine;
  return proto.grakn.protocol.Graql.Undefine.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grakn.protocol.Graql.Undefine} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grakn.protocol.Graql.Undefine}
 */
proto.grakn.protocol.Graql.Undefine.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grakn.protocol.Graql.Undefine.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grakn.protocol.Graql.Undefine.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grakn.protocol.Graql.Undefine} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Graql.Undefine.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grakn.protocol.Graql.Undefine.Req.prototype.toObject = function(opt_includeInstance) {
  return proto.grakn.protocol.Graql.Undefine.Req.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grakn.protocol.Graql.Undefine.Req} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Graql.Undefine.Req.toObject = function(includeInstance, msg) {
  var f, obj = {
    query: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grakn.protocol.Graql.Undefine.Req}
 */
proto.grakn.protocol.Graql.Undefine.Req.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grakn.protocol.Graql.Undefine.Req;
  return proto.grakn.protocol.Graql.Undefine.Req.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grakn.protocol.Graql.Undefine.Req} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grakn.protocol.Graql.Undefine.Req}
 */
proto.grakn.protocol.Graql.Undefine.Req.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuery(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grakn.protocol.Graql.Undefine.Req.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grakn.protocol.Graql.Undefine.Req.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grakn.protocol.Graql.Undefine.Req} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Graql.Undefine.Req.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuery();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string query = 1;
 * @return {string}
 */
proto.grakn.protocol.Graql.Undefine.Req.prototype.getQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.grakn.protocol.Graql.Undefine.Req} returns this
 */
proto.grakn.protocol.Graql.Undefine.Req.prototype.setQuery = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grakn.protocol.Graql.Undefine.Res.prototype.toObject = function(opt_includeInstance) {
  return proto.grakn.protocol.Graql.Undefine.Res.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grakn.protocol.Graql.Undefine.Res} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Graql.Undefine.Res.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grakn.protocol.Graql.Undefine.Res}
 */
proto.grakn.protocol.Graql.Undefine.Res.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grakn.protocol.Graql.Undefine.Res;
  return proto.grakn.protocol.Graql.Undefine.Res.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grakn.protocol.Graql.Undefine.Res} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grakn.protocol.Graql.Undefine.Res}
 */
proto.grakn.protocol.Graql.Undefine.Res.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grakn.protocol.Graql.Undefine.Res.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grakn.protocol.Graql.Undefine.Res.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grakn.protocol.Graql.Undefine.Res} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Graql.Undefine.Res.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.grakn.protocol);
