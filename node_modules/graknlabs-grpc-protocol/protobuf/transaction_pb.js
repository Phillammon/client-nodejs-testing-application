// source: protobuf/transaction.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var protobuf_concept_pb = require('../protobuf/concept_pb.js');
goog.object.extend(proto, protobuf_concept_pb);
var protobuf_options_pb = require('../protobuf/options_pb.js');
goog.object.extend(proto, protobuf_options_pb);
var protobuf_query_pb = require('../protobuf/query_pb.js');
goog.object.extend(proto, protobuf_query_pb);
goog.exportSymbol('proto.grakn.protocol.Transaction', null, global);
goog.exportSymbol('proto.grakn.protocol.Transaction.Commit', null, global);
goog.exportSymbol('proto.grakn.protocol.Transaction.Commit.Req', null, global);
goog.exportSymbol('proto.grakn.protocol.Transaction.Commit.Res', null, global);
goog.exportSymbol('proto.grakn.protocol.Transaction.Open', null, global);
goog.exportSymbol('proto.grakn.protocol.Transaction.Open.Req', null, global);
goog.exportSymbol('proto.grakn.protocol.Transaction.Open.Res', null, global);
goog.exportSymbol('proto.grakn.protocol.Transaction.Req', null, global);
goog.exportSymbol('proto.grakn.protocol.Transaction.Req.ReqCase', null, global);
goog.exportSymbol('proto.grakn.protocol.Transaction.Res', null, global);
goog.exportSymbol('proto.grakn.protocol.Transaction.Res.ResCase', null, global);
goog.exportSymbol('proto.grakn.protocol.Transaction.Rollback', null, global);
goog.exportSymbol('proto.grakn.protocol.Transaction.Rollback.Req', null, global);
goog.exportSymbol('proto.grakn.protocol.Transaction.Rollback.Res', null, global);
goog.exportSymbol('proto.grakn.protocol.Transaction.Type', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grakn.protocol.Transaction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grakn.protocol.Transaction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grakn.protocol.Transaction.displayName = 'proto.grakn.protocol.Transaction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grakn.protocol.Transaction.Req = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.grakn.protocol.Transaction.Req.oneofGroups_);
};
goog.inherits(proto.grakn.protocol.Transaction.Req, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grakn.protocol.Transaction.Req.displayName = 'proto.grakn.protocol.Transaction.Req';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grakn.protocol.Transaction.Res = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.grakn.protocol.Transaction.Res.oneofGroups_);
};
goog.inherits(proto.grakn.protocol.Transaction.Res, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grakn.protocol.Transaction.Res.displayName = 'proto.grakn.protocol.Transaction.Res';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grakn.protocol.Transaction.Open = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grakn.protocol.Transaction.Open, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grakn.protocol.Transaction.Open.displayName = 'proto.grakn.protocol.Transaction.Open';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grakn.protocol.Transaction.Open.Req = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grakn.protocol.Transaction.Open.Req, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grakn.protocol.Transaction.Open.Req.displayName = 'proto.grakn.protocol.Transaction.Open.Req';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grakn.protocol.Transaction.Open.Res = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grakn.protocol.Transaction.Open.Res, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grakn.protocol.Transaction.Open.Res.displayName = 'proto.grakn.protocol.Transaction.Open.Res';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grakn.protocol.Transaction.Commit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grakn.protocol.Transaction.Commit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grakn.protocol.Transaction.Commit.displayName = 'proto.grakn.protocol.Transaction.Commit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grakn.protocol.Transaction.Commit.Req = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grakn.protocol.Transaction.Commit.Req, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grakn.protocol.Transaction.Commit.Req.displayName = 'proto.grakn.protocol.Transaction.Commit.Req';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grakn.protocol.Transaction.Commit.Res = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grakn.protocol.Transaction.Commit.Res, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grakn.protocol.Transaction.Commit.Res.displayName = 'proto.grakn.protocol.Transaction.Commit.Res';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grakn.protocol.Transaction.Rollback = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grakn.protocol.Transaction.Rollback, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grakn.protocol.Transaction.Rollback.displayName = 'proto.grakn.protocol.Transaction.Rollback';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grakn.protocol.Transaction.Rollback.Req = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grakn.protocol.Transaction.Rollback.Req, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grakn.protocol.Transaction.Rollback.Req.displayName = 'proto.grakn.protocol.Transaction.Rollback.Req';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grakn.protocol.Transaction.Rollback.Res = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grakn.protocol.Transaction.Rollback.Res, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grakn.protocol.Transaction.Rollback.Res.displayName = 'proto.grakn.protocol.Transaction.Rollback.Res';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grakn.protocol.Transaction.prototype.toObject = function(opt_includeInstance) {
  return proto.grakn.protocol.Transaction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grakn.protocol.Transaction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Transaction.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grakn.protocol.Transaction}
 */
proto.grakn.protocol.Transaction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grakn.protocol.Transaction;
  return proto.grakn.protocol.Transaction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grakn.protocol.Transaction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grakn.protocol.Transaction}
 */
proto.grakn.protocol.Transaction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grakn.protocol.Transaction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grakn.protocol.Transaction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grakn.protocol.Transaction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Transaction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.grakn.protocol.Transaction.Type = {
  READ: 0,
  WRITE: 1
};


/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.grakn.protocol.Transaction.Req.oneofGroups_ = [[4,5,6,7,8,9,10,11,12]];

/**
 * @enum {number}
 */
proto.grakn.protocol.Transaction.Req.ReqCase = {
  REQ_NOT_SET: 0,
  CONTINUE: 4,
  OPEN_REQ: 5,
  COMMIT_REQ: 6,
  ROLLBACK_REQ: 7,
  QUERY_REQ: 8,
  CONCEPT_MANAGER_REQ: 9,
  THING_REQ: 10,
  TYPE_REQ: 11,
  RULE_REQ: 12
};

/**
 * @return {proto.grakn.protocol.Transaction.Req.ReqCase}
 */
proto.grakn.protocol.Transaction.Req.prototype.getReqCase = function() {
  return /** @type {proto.grakn.protocol.Transaction.Req.ReqCase} */(jspb.Message.computeOneofCase(this, proto.grakn.protocol.Transaction.Req.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grakn.protocol.Transaction.Req.prototype.toObject = function(opt_includeInstance) {
  return proto.grakn.protocol.Transaction.Req.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grakn.protocol.Transaction.Req} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Transaction.Req.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : [],
    latencyMillis: jspb.Message.getFieldWithDefault(msg, 3, 0),
    pb_continue: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    openReq: (f = msg.getOpenReq()) && proto.grakn.protocol.Transaction.Open.Req.toObject(includeInstance, f),
    commitReq: (f = msg.getCommitReq()) && proto.grakn.protocol.Transaction.Commit.Req.toObject(includeInstance, f),
    rollbackReq: (f = msg.getRollbackReq()) && proto.grakn.protocol.Transaction.Rollback.Req.toObject(includeInstance, f),
    queryReq: (f = msg.getQueryReq()) && protobuf_query_pb.Query.Req.toObject(includeInstance, f),
    conceptManagerReq: (f = msg.getConceptManagerReq()) && protobuf_concept_pb.ConceptManager.Req.toObject(includeInstance, f),
    thingReq: (f = msg.getThingReq()) && protobuf_concept_pb.Thing.Req.toObject(includeInstance, f),
    typeReq: (f = msg.getTypeReq()) && protobuf_concept_pb.Type.Req.toObject(includeInstance, f),
    ruleReq: (f = msg.getRuleReq()) && protobuf_concept_pb.Rule.Req.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grakn.protocol.Transaction.Req}
 */
proto.grakn.protocol.Transaction.Req.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grakn.protocol.Transaction.Req;
  return proto.grakn.protocol.Transaction.Req.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grakn.protocol.Transaction.Req} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grakn.protocol.Transaction.Req}
 */
proto.grakn.protocol.Transaction.Req.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLatencyMillis(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setContinue(value);
      break;
    case 5:
      var value = new proto.grakn.protocol.Transaction.Open.Req;
      reader.readMessage(value,proto.grakn.protocol.Transaction.Open.Req.deserializeBinaryFromReader);
      msg.setOpenReq(value);
      break;
    case 6:
      var value = new proto.grakn.protocol.Transaction.Commit.Req;
      reader.readMessage(value,proto.grakn.protocol.Transaction.Commit.Req.deserializeBinaryFromReader);
      msg.setCommitReq(value);
      break;
    case 7:
      var value = new proto.grakn.protocol.Transaction.Rollback.Req;
      reader.readMessage(value,proto.grakn.protocol.Transaction.Rollback.Req.deserializeBinaryFromReader);
      msg.setRollbackReq(value);
      break;
    case 8:
      var value = new protobuf_query_pb.Query.Req;
      reader.readMessage(value,protobuf_query_pb.Query.Req.deserializeBinaryFromReader);
      msg.setQueryReq(value);
      break;
    case 9:
      var value = new protobuf_concept_pb.ConceptManager.Req;
      reader.readMessage(value,protobuf_concept_pb.ConceptManager.Req.deserializeBinaryFromReader);
      msg.setConceptManagerReq(value);
      break;
    case 10:
      var value = new protobuf_concept_pb.Thing.Req;
      reader.readMessage(value,protobuf_concept_pb.Thing.Req.deserializeBinaryFromReader);
      msg.setThingReq(value);
      break;
    case 11:
      var value = new protobuf_concept_pb.Type.Req;
      reader.readMessage(value,protobuf_concept_pb.Type.Req.deserializeBinaryFromReader);
      msg.setTypeReq(value);
      break;
    case 12:
      var value = new protobuf_concept_pb.Rule.Req;
      reader.readMessage(value,protobuf_concept_pb.Rule.Req.deserializeBinaryFromReader);
      msg.setRuleReq(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grakn.protocol.Transaction.Req.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grakn.protocol.Transaction.Req.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grakn.protocol.Transaction.Req} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Transaction.Req.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getLatencyMillis();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getOpenReq();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.grakn.protocol.Transaction.Open.Req.serializeBinaryToWriter
    );
  }
  f = message.getCommitReq();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.grakn.protocol.Transaction.Commit.Req.serializeBinaryToWriter
    );
  }
  f = message.getRollbackReq();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.grakn.protocol.Transaction.Rollback.Req.serializeBinaryToWriter
    );
  }
  f = message.getQueryReq();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      protobuf_query_pb.Query.Req.serializeBinaryToWriter
    );
  }
  f = message.getConceptManagerReq();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      protobuf_concept_pb.ConceptManager.Req.serializeBinaryToWriter
    );
  }
  f = message.getThingReq();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      protobuf_concept_pb.Thing.Req.serializeBinaryToWriter
    );
  }
  f = message.getTypeReq();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      protobuf_concept_pb.Type.Req.serializeBinaryToWriter
    );
  }
  f = message.getRuleReq();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      protobuf_concept_pb.Rule.Req.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.grakn.protocol.Transaction.Req.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.grakn.protocol.Transaction.Req} returns this
 */
proto.grakn.protocol.Transaction.Req.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<string, string> metadata = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.grakn.protocol.Transaction.Req.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.grakn.protocol.Transaction.Req} returns this
 */
proto.grakn.protocol.Transaction.Req.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};


/**
 * optional int32 latency_millis = 3;
 * @return {number}
 */
proto.grakn.protocol.Transaction.Req.prototype.getLatencyMillis = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.grakn.protocol.Transaction.Req} returns this
 */
proto.grakn.protocol.Transaction.Req.prototype.setLatencyMillis = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool continue = 4;
 * @return {boolean}
 */
proto.grakn.protocol.Transaction.Req.prototype.getContinue = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.grakn.protocol.Transaction.Req} returns this
 */
proto.grakn.protocol.Transaction.Req.prototype.setContinue = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.grakn.protocol.Transaction.Req.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.grakn.protocol.Transaction.Req} returns this
 */
proto.grakn.protocol.Transaction.Req.prototype.clearContinue = function() {
  return jspb.Message.setOneofField(this, 4, proto.grakn.protocol.Transaction.Req.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grakn.protocol.Transaction.Req.prototype.hasContinue = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Open.Req open_req = 5;
 * @return {?proto.grakn.protocol.Transaction.Open.Req}
 */
proto.grakn.protocol.Transaction.Req.prototype.getOpenReq = function() {
  return /** @type{?proto.grakn.protocol.Transaction.Open.Req} */ (
    jspb.Message.getWrapperField(this, proto.grakn.protocol.Transaction.Open.Req, 5));
};


/**
 * @param {?proto.grakn.protocol.Transaction.Open.Req|undefined} value
 * @return {!proto.grakn.protocol.Transaction.Req} returns this
*/
proto.grakn.protocol.Transaction.Req.prototype.setOpenReq = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.grakn.protocol.Transaction.Req.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grakn.protocol.Transaction.Req} returns this
 */
proto.grakn.protocol.Transaction.Req.prototype.clearOpenReq = function() {
  return this.setOpenReq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grakn.protocol.Transaction.Req.prototype.hasOpenReq = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Commit.Req commit_req = 6;
 * @return {?proto.grakn.protocol.Transaction.Commit.Req}
 */
proto.grakn.protocol.Transaction.Req.prototype.getCommitReq = function() {
  return /** @type{?proto.grakn.protocol.Transaction.Commit.Req} */ (
    jspb.Message.getWrapperField(this, proto.grakn.protocol.Transaction.Commit.Req, 6));
};


/**
 * @param {?proto.grakn.protocol.Transaction.Commit.Req|undefined} value
 * @return {!proto.grakn.protocol.Transaction.Req} returns this
*/
proto.grakn.protocol.Transaction.Req.prototype.setCommitReq = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.grakn.protocol.Transaction.Req.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grakn.protocol.Transaction.Req} returns this
 */
proto.grakn.protocol.Transaction.Req.prototype.clearCommitReq = function() {
  return this.setCommitReq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grakn.protocol.Transaction.Req.prototype.hasCommitReq = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Rollback.Req rollback_req = 7;
 * @return {?proto.grakn.protocol.Transaction.Rollback.Req}
 */
proto.grakn.protocol.Transaction.Req.prototype.getRollbackReq = function() {
  return /** @type{?proto.grakn.protocol.Transaction.Rollback.Req} */ (
    jspb.Message.getWrapperField(this, proto.grakn.protocol.Transaction.Rollback.Req, 7));
};


/**
 * @param {?proto.grakn.protocol.Transaction.Rollback.Req|undefined} value
 * @return {!proto.grakn.protocol.Transaction.Req} returns this
*/
proto.grakn.protocol.Transaction.Req.prototype.setRollbackReq = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.grakn.protocol.Transaction.Req.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grakn.protocol.Transaction.Req} returns this
 */
proto.grakn.protocol.Transaction.Req.prototype.clearRollbackReq = function() {
  return this.setRollbackReq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grakn.protocol.Transaction.Req.prototype.hasRollbackReq = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Query.Req query_req = 8;
 * @return {?proto.grakn.protocol.Query.Req}
 */
proto.grakn.protocol.Transaction.Req.prototype.getQueryReq = function() {
  return /** @type{?proto.grakn.protocol.Query.Req} */ (
    jspb.Message.getWrapperField(this, protobuf_query_pb.Query.Req, 8));
};


/**
 * @param {?proto.grakn.protocol.Query.Req|undefined} value
 * @return {!proto.grakn.protocol.Transaction.Req} returns this
*/
proto.grakn.protocol.Transaction.Req.prototype.setQueryReq = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.grakn.protocol.Transaction.Req.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grakn.protocol.Transaction.Req} returns this
 */
proto.grakn.protocol.Transaction.Req.prototype.clearQueryReq = function() {
  return this.setQueryReq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grakn.protocol.Transaction.Req.prototype.hasQueryReq = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional ConceptManager.Req concept_manager_req = 9;
 * @return {?proto.grakn.protocol.ConceptManager.Req}
 */
proto.grakn.protocol.Transaction.Req.prototype.getConceptManagerReq = function() {
  return /** @type{?proto.grakn.protocol.ConceptManager.Req} */ (
    jspb.Message.getWrapperField(this, protobuf_concept_pb.ConceptManager.Req, 9));
};


/**
 * @param {?proto.grakn.protocol.ConceptManager.Req|undefined} value
 * @return {!proto.grakn.protocol.Transaction.Req} returns this
*/
proto.grakn.protocol.Transaction.Req.prototype.setConceptManagerReq = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.grakn.protocol.Transaction.Req.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grakn.protocol.Transaction.Req} returns this
 */
proto.grakn.protocol.Transaction.Req.prototype.clearConceptManagerReq = function() {
  return this.setConceptManagerReq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grakn.protocol.Transaction.Req.prototype.hasConceptManagerReq = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Thing.Req thing_req = 10;
 * @return {?proto.grakn.protocol.Thing.Req}
 */
proto.grakn.protocol.Transaction.Req.prototype.getThingReq = function() {
  return /** @type{?proto.grakn.protocol.Thing.Req} */ (
    jspb.Message.getWrapperField(this, protobuf_concept_pb.Thing.Req, 10));
};


/**
 * @param {?proto.grakn.protocol.Thing.Req|undefined} value
 * @return {!proto.grakn.protocol.Transaction.Req} returns this
*/
proto.grakn.protocol.Transaction.Req.prototype.setThingReq = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.grakn.protocol.Transaction.Req.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grakn.protocol.Transaction.Req} returns this
 */
proto.grakn.protocol.Transaction.Req.prototype.clearThingReq = function() {
  return this.setThingReq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grakn.protocol.Transaction.Req.prototype.hasThingReq = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Type.Req type_req = 11;
 * @return {?proto.grakn.protocol.Type.Req}
 */
proto.grakn.protocol.Transaction.Req.prototype.getTypeReq = function() {
  return /** @type{?proto.grakn.protocol.Type.Req} */ (
    jspb.Message.getWrapperField(this, protobuf_concept_pb.Type.Req, 11));
};


/**
 * @param {?proto.grakn.protocol.Type.Req|undefined} value
 * @return {!proto.grakn.protocol.Transaction.Req} returns this
*/
proto.grakn.protocol.Transaction.Req.prototype.setTypeReq = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.grakn.protocol.Transaction.Req.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grakn.protocol.Transaction.Req} returns this
 */
proto.grakn.protocol.Transaction.Req.prototype.clearTypeReq = function() {
  return this.setTypeReq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grakn.protocol.Transaction.Req.prototype.hasTypeReq = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional Rule.Req rule_req = 12;
 * @return {?proto.grakn.protocol.Rule.Req}
 */
proto.grakn.protocol.Transaction.Req.prototype.getRuleReq = function() {
  return /** @type{?proto.grakn.protocol.Rule.Req} */ (
    jspb.Message.getWrapperField(this, protobuf_concept_pb.Rule.Req, 12));
};


/**
 * @param {?proto.grakn.protocol.Rule.Req|undefined} value
 * @return {!proto.grakn.protocol.Transaction.Req} returns this
*/
proto.grakn.protocol.Transaction.Req.prototype.setRuleReq = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.grakn.protocol.Transaction.Req.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grakn.protocol.Transaction.Req} returns this
 */
proto.grakn.protocol.Transaction.Req.prototype.clearRuleReq = function() {
  return this.setRuleReq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grakn.protocol.Transaction.Req.prototype.hasRuleReq = function() {
  return jspb.Message.getField(this, 12) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.grakn.protocol.Transaction.Res.oneofGroups_ = [[2,4,5,6,7,8,9,10,11,12]];

/**
 * @enum {number}
 */
proto.grakn.protocol.Transaction.Res.ResCase = {
  RES_NOT_SET: 0,
  DONE: 2,
  CONTINUE: 4,
  OPEN_RES: 5,
  COMMIT_RES: 6,
  ROLLBACK_RES: 7,
  QUERY_RES: 8,
  CONCEPT_MANAGER_RES: 9,
  THING_RES: 10,
  TYPE_RES: 11,
  RULE_RES: 12
};

/**
 * @return {proto.grakn.protocol.Transaction.Res.ResCase}
 */
proto.grakn.protocol.Transaction.Res.prototype.getResCase = function() {
  return /** @type {proto.grakn.protocol.Transaction.Res.ResCase} */(jspb.Message.computeOneofCase(this, proto.grakn.protocol.Transaction.Res.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grakn.protocol.Transaction.Res.prototype.toObject = function(opt_includeInstance) {
  return proto.grakn.protocol.Transaction.Res.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grakn.protocol.Transaction.Res} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Transaction.Res.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    done: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    pb_continue: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    openRes: (f = msg.getOpenRes()) && proto.grakn.protocol.Transaction.Open.Res.toObject(includeInstance, f),
    commitRes: (f = msg.getCommitRes()) && proto.grakn.protocol.Transaction.Commit.Res.toObject(includeInstance, f),
    rollbackRes: (f = msg.getRollbackRes()) && proto.grakn.protocol.Transaction.Rollback.Res.toObject(includeInstance, f),
    queryRes: (f = msg.getQueryRes()) && protobuf_query_pb.Query.Res.toObject(includeInstance, f),
    conceptManagerRes: (f = msg.getConceptManagerRes()) && protobuf_concept_pb.ConceptManager.Res.toObject(includeInstance, f),
    thingRes: (f = msg.getThingRes()) && protobuf_concept_pb.Thing.Res.toObject(includeInstance, f),
    typeRes: (f = msg.getTypeRes()) && protobuf_concept_pb.Type.Res.toObject(includeInstance, f),
    ruleRes: (f = msg.getRuleRes()) && protobuf_concept_pb.Rule.Res.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grakn.protocol.Transaction.Res}
 */
proto.grakn.protocol.Transaction.Res.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grakn.protocol.Transaction.Res;
  return proto.grakn.protocol.Transaction.Res.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grakn.protocol.Transaction.Res} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grakn.protocol.Transaction.Res}
 */
proto.grakn.protocol.Transaction.Res.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDone(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setContinue(value);
      break;
    case 5:
      var value = new proto.grakn.protocol.Transaction.Open.Res;
      reader.readMessage(value,proto.grakn.protocol.Transaction.Open.Res.deserializeBinaryFromReader);
      msg.setOpenRes(value);
      break;
    case 6:
      var value = new proto.grakn.protocol.Transaction.Commit.Res;
      reader.readMessage(value,proto.grakn.protocol.Transaction.Commit.Res.deserializeBinaryFromReader);
      msg.setCommitRes(value);
      break;
    case 7:
      var value = new proto.grakn.protocol.Transaction.Rollback.Res;
      reader.readMessage(value,proto.grakn.protocol.Transaction.Rollback.Res.deserializeBinaryFromReader);
      msg.setRollbackRes(value);
      break;
    case 8:
      var value = new protobuf_query_pb.Query.Res;
      reader.readMessage(value,protobuf_query_pb.Query.Res.deserializeBinaryFromReader);
      msg.setQueryRes(value);
      break;
    case 9:
      var value = new protobuf_concept_pb.ConceptManager.Res;
      reader.readMessage(value,protobuf_concept_pb.ConceptManager.Res.deserializeBinaryFromReader);
      msg.setConceptManagerRes(value);
      break;
    case 10:
      var value = new protobuf_concept_pb.Thing.Res;
      reader.readMessage(value,protobuf_concept_pb.Thing.Res.deserializeBinaryFromReader);
      msg.setThingRes(value);
      break;
    case 11:
      var value = new protobuf_concept_pb.Type.Res;
      reader.readMessage(value,protobuf_concept_pb.Type.Res.deserializeBinaryFromReader);
      msg.setTypeRes(value);
      break;
    case 12:
      var value = new protobuf_concept_pb.Rule.Res;
      reader.readMessage(value,protobuf_concept_pb.Rule.Res.deserializeBinaryFromReader);
      msg.setRuleRes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grakn.protocol.Transaction.Res.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grakn.protocol.Transaction.Res.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grakn.protocol.Transaction.Res} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Transaction.Res.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getOpenRes();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.grakn.protocol.Transaction.Open.Res.serializeBinaryToWriter
    );
  }
  f = message.getCommitRes();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.grakn.protocol.Transaction.Commit.Res.serializeBinaryToWriter
    );
  }
  f = message.getRollbackRes();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.grakn.protocol.Transaction.Rollback.Res.serializeBinaryToWriter
    );
  }
  f = message.getQueryRes();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      protobuf_query_pb.Query.Res.serializeBinaryToWriter
    );
  }
  f = message.getConceptManagerRes();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      protobuf_concept_pb.ConceptManager.Res.serializeBinaryToWriter
    );
  }
  f = message.getThingRes();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      protobuf_concept_pb.Thing.Res.serializeBinaryToWriter
    );
  }
  f = message.getTypeRes();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      protobuf_concept_pb.Type.Res.serializeBinaryToWriter
    );
  }
  f = message.getRuleRes();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      protobuf_concept_pb.Rule.Res.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.grakn.protocol.Transaction.Res.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.grakn.protocol.Transaction.Res} returns this
 */
proto.grakn.protocol.Transaction.Res.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool done = 2;
 * @return {boolean}
 */
proto.grakn.protocol.Transaction.Res.prototype.getDone = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.grakn.protocol.Transaction.Res} returns this
 */
proto.grakn.protocol.Transaction.Res.prototype.setDone = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.grakn.protocol.Transaction.Res.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.grakn.protocol.Transaction.Res} returns this
 */
proto.grakn.protocol.Transaction.Res.prototype.clearDone = function() {
  return jspb.Message.setOneofField(this, 2, proto.grakn.protocol.Transaction.Res.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grakn.protocol.Transaction.Res.prototype.hasDone = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool continue = 4;
 * @return {boolean}
 */
proto.grakn.protocol.Transaction.Res.prototype.getContinue = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.grakn.protocol.Transaction.Res} returns this
 */
proto.grakn.protocol.Transaction.Res.prototype.setContinue = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.grakn.protocol.Transaction.Res.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.grakn.protocol.Transaction.Res} returns this
 */
proto.grakn.protocol.Transaction.Res.prototype.clearContinue = function() {
  return jspb.Message.setOneofField(this, 4, proto.grakn.protocol.Transaction.Res.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grakn.protocol.Transaction.Res.prototype.hasContinue = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Open.Res open_res = 5;
 * @return {?proto.grakn.protocol.Transaction.Open.Res}
 */
proto.grakn.protocol.Transaction.Res.prototype.getOpenRes = function() {
  return /** @type{?proto.grakn.protocol.Transaction.Open.Res} */ (
    jspb.Message.getWrapperField(this, proto.grakn.protocol.Transaction.Open.Res, 5));
};


/**
 * @param {?proto.grakn.protocol.Transaction.Open.Res|undefined} value
 * @return {!proto.grakn.protocol.Transaction.Res} returns this
*/
proto.grakn.protocol.Transaction.Res.prototype.setOpenRes = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.grakn.protocol.Transaction.Res.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grakn.protocol.Transaction.Res} returns this
 */
proto.grakn.protocol.Transaction.Res.prototype.clearOpenRes = function() {
  return this.setOpenRes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grakn.protocol.Transaction.Res.prototype.hasOpenRes = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Commit.Res commit_res = 6;
 * @return {?proto.grakn.protocol.Transaction.Commit.Res}
 */
proto.grakn.protocol.Transaction.Res.prototype.getCommitRes = function() {
  return /** @type{?proto.grakn.protocol.Transaction.Commit.Res} */ (
    jspb.Message.getWrapperField(this, proto.grakn.protocol.Transaction.Commit.Res, 6));
};


/**
 * @param {?proto.grakn.protocol.Transaction.Commit.Res|undefined} value
 * @return {!proto.grakn.protocol.Transaction.Res} returns this
*/
proto.grakn.protocol.Transaction.Res.prototype.setCommitRes = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.grakn.protocol.Transaction.Res.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grakn.protocol.Transaction.Res} returns this
 */
proto.grakn.protocol.Transaction.Res.prototype.clearCommitRes = function() {
  return this.setCommitRes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grakn.protocol.Transaction.Res.prototype.hasCommitRes = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Rollback.Res rollback_res = 7;
 * @return {?proto.grakn.protocol.Transaction.Rollback.Res}
 */
proto.grakn.protocol.Transaction.Res.prototype.getRollbackRes = function() {
  return /** @type{?proto.grakn.protocol.Transaction.Rollback.Res} */ (
    jspb.Message.getWrapperField(this, proto.grakn.protocol.Transaction.Rollback.Res, 7));
};


/**
 * @param {?proto.grakn.protocol.Transaction.Rollback.Res|undefined} value
 * @return {!proto.grakn.protocol.Transaction.Res} returns this
*/
proto.grakn.protocol.Transaction.Res.prototype.setRollbackRes = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.grakn.protocol.Transaction.Res.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grakn.protocol.Transaction.Res} returns this
 */
proto.grakn.protocol.Transaction.Res.prototype.clearRollbackRes = function() {
  return this.setRollbackRes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grakn.protocol.Transaction.Res.prototype.hasRollbackRes = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Query.Res query_res = 8;
 * @return {?proto.grakn.protocol.Query.Res}
 */
proto.grakn.protocol.Transaction.Res.prototype.getQueryRes = function() {
  return /** @type{?proto.grakn.protocol.Query.Res} */ (
    jspb.Message.getWrapperField(this, protobuf_query_pb.Query.Res, 8));
};


/**
 * @param {?proto.grakn.protocol.Query.Res|undefined} value
 * @return {!proto.grakn.protocol.Transaction.Res} returns this
*/
proto.grakn.protocol.Transaction.Res.prototype.setQueryRes = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.grakn.protocol.Transaction.Res.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grakn.protocol.Transaction.Res} returns this
 */
proto.grakn.protocol.Transaction.Res.prototype.clearQueryRes = function() {
  return this.setQueryRes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grakn.protocol.Transaction.Res.prototype.hasQueryRes = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional ConceptManager.Res concept_manager_res = 9;
 * @return {?proto.grakn.protocol.ConceptManager.Res}
 */
proto.grakn.protocol.Transaction.Res.prototype.getConceptManagerRes = function() {
  return /** @type{?proto.grakn.protocol.ConceptManager.Res} */ (
    jspb.Message.getWrapperField(this, protobuf_concept_pb.ConceptManager.Res, 9));
};


/**
 * @param {?proto.grakn.protocol.ConceptManager.Res|undefined} value
 * @return {!proto.grakn.protocol.Transaction.Res} returns this
*/
proto.grakn.protocol.Transaction.Res.prototype.setConceptManagerRes = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.grakn.protocol.Transaction.Res.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grakn.protocol.Transaction.Res} returns this
 */
proto.grakn.protocol.Transaction.Res.prototype.clearConceptManagerRes = function() {
  return this.setConceptManagerRes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grakn.protocol.Transaction.Res.prototype.hasConceptManagerRes = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Thing.Res thing_res = 10;
 * @return {?proto.grakn.protocol.Thing.Res}
 */
proto.grakn.protocol.Transaction.Res.prototype.getThingRes = function() {
  return /** @type{?proto.grakn.protocol.Thing.Res} */ (
    jspb.Message.getWrapperField(this, protobuf_concept_pb.Thing.Res, 10));
};


/**
 * @param {?proto.grakn.protocol.Thing.Res|undefined} value
 * @return {!proto.grakn.protocol.Transaction.Res} returns this
*/
proto.grakn.protocol.Transaction.Res.prototype.setThingRes = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.grakn.protocol.Transaction.Res.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grakn.protocol.Transaction.Res} returns this
 */
proto.grakn.protocol.Transaction.Res.prototype.clearThingRes = function() {
  return this.setThingRes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grakn.protocol.Transaction.Res.prototype.hasThingRes = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Type.Res type_res = 11;
 * @return {?proto.grakn.protocol.Type.Res}
 */
proto.grakn.protocol.Transaction.Res.prototype.getTypeRes = function() {
  return /** @type{?proto.grakn.protocol.Type.Res} */ (
    jspb.Message.getWrapperField(this, protobuf_concept_pb.Type.Res, 11));
};


/**
 * @param {?proto.grakn.protocol.Type.Res|undefined} value
 * @return {!proto.grakn.protocol.Transaction.Res} returns this
*/
proto.grakn.protocol.Transaction.Res.prototype.setTypeRes = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.grakn.protocol.Transaction.Res.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grakn.protocol.Transaction.Res} returns this
 */
proto.grakn.protocol.Transaction.Res.prototype.clearTypeRes = function() {
  return this.setTypeRes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grakn.protocol.Transaction.Res.prototype.hasTypeRes = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional Rule.Res rule_res = 12;
 * @return {?proto.grakn.protocol.Rule.Res}
 */
proto.grakn.protocol.Transaction.Res.prototype.getRuleRes = function() {
  return /** @type{?proto.grakn.protocol.Rule.Res} */ (
    jspb.Message.getWrapperField(this, protobuf_concept_pb.Rule.Res, 12));
};


/**
 * @param {?proto.grakn.protocol.Rule.Res|undefined} value
 * @return {!proto.grakn.protocol.Transaction.Res} returns this
*/
proto.grakn.protocol.Transaction.Res.prototype.setRuleRes = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.grakn.protocol.Transaction.Res.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grakn.protocol.Transaction.Res} returns this
 */
proto.grakn.protocol.Transaction.Res.prototype.clearRuleRes = function() {
  return this.setRuleRes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grakn.protocol.Transaction.Res.prototype.hasRuleRes = function() {
  return jspb.Message.getField(this, 12) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grakn.protocol.Transaction.Open.prototype.toObject = function(opt_includeInstance) {
  return proto.grakn.protocol.Transaction.Open.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grakn.protocol.Transaction.Open} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Transaction.Open.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grakn.protocol.Transaction.Open}
 */
proto.grakn.protocol.Transaction.Open.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grakn.protocol.Transaction.Open;
  return proto.grakn.protocol.Transaction.Open.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grakn.protocol.Transaction.Open} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grakn.protocol.Transaction.Open}
 */
proto.grakn.protocol.Transaction.Open.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grakn.protocol.Transaction.Open.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grakn.protocol.Transaction.Open.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grakn.protocol.Transaction.Open} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Transaction.Open.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grakn.protocol.Transaction.Open.Req.prototype.toObject = function(opt_includeInstance) {
  return proto.grakn.protocol.Transaction.Open.Req.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grakn.protocol.Transaction.Open.Req} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Transaction.Open.Req.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionId: msg.getSessionId_asB64(),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    options: (f = msg.getOptions()) && protobuf_options_pb.Options.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grakn.protocol.Transaction.Open.Req}
 */
proto.grakn.protocol.Transaction.Open.Req.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grakn.protocol.Transaction.Open.Req;
  return proto.grakn.protocol.Transaction.Open.Req.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grakn.protocol.Transaction.Open.Req} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grakn.protocol.Transaction.Open.Req}
 */
proto.grakn.protocol.Transaction.Open.Req.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSessionId(value);
      break;
    case 2:
      var value = /** @type {!proto.grakn.protocol.Transaction.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = new protobuf_options_pb.Options;
      reader.readMessage(value,protobuf_options_pb.Options.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grakn.protocol.Transaction.Open.Req.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grakn.protocol.Transaction.Open.Req.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grakn.protocol.Transaction.Open.Req} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Transaction.Open.Req.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      protobuf_options_pb.Options.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes session_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.grakn.protocol.Transaction.Open.Req.prototype.getSessionId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes session_id = 1;
 * This is a type-conversion wrapper around `getSessionId()`
 * @return {string}
 */
proto.grakn.protocol.Transaction.Open.Req.prototype.getSessionId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSessionId()));
};


/**
 * optional bytes session_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSessionId()`
 * @return {!Uint8Array}
 */
proto.grakn.protocol.Transaction.Open.Req.prototype.getSessionId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSessionId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.grakn.protocol.Transaction.Open.Req} returns this
 */
proto.grakn.protocol.Transaction.Open.Req.prototype.setSessionId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional Type type = 2;
 * @return {!proto.grakn.protocol.Transaction.Type}
 */
proto.grakn.protocol.Transaction.Open.Req.prototype.getType = function() {
  return /** @type {!proto.grakn.protocol.Transaction.Type} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.grakn.protocol.Transaction.Type} value
 * @return {!proto.grakn.protocol.Transaction.Open.Req} returns this
 */
proto.grakn.protocol.Transaction.Open.Req.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional Options options = 3;
 * @return {?proto.grakn.protocol.Options}
 */
proto.grakn.protocol.Transaction.Open.Req.prototype.getOptions = function() {
  return /** @type{?proto.grakn.protocol.Options} */ (
    jspb.Message.getWrapperField(this, protobuf_options_pb.Options, 3));
};


/**
 * @param {?proto.grakn.protocol.Options|undefined} value
 * @return {!proto.grakn.protocol.Transaction.Open.Req} returns this
*/
proto.grakn.protocol.Transaction.Open.Req.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grakn.protocol.Transaction.Open.Req} returns this
 */
proto.grakn.protocol.Transaction.Open.Req.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grakn.protocol.Transaction.Open.Req.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grakn.protocol.Transaction.Open.Res.prototype.toObject = function(opt_includeInstance) {
  return proto.grakn.protocol.Transaction.Open.Res.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grakn.protocol.Transaction.Open.Res} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Transaction.Open.Res.toObject = function(includeInstance, msg) {
  var f, obj = {
    processingTimeMillis: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grakn.protocol.Transaction.Open.Res}
 */
proto.grakn.protocol.Transaction.Open.Res.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grakn.protocol.Transaction.Open.Res;
  return proto.grakn.protocol.Transaction.Open.Res.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grakn.protocol.Transaction.Open.Res} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grakn.protocol.Transaction.Open.Res}
 */
proto.grakn.protocol.Transaction.Open.Res.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setProcessingTimeMillis(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grakn.protocol.Transaction.Open.Res.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grakn.protocol.Transaction.Open.Res.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grakn.protocol.Transaction.Open.Res} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Transaction.Open.Res.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProcessingTimeMillis();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 processing_time_millis = 1;
 * @return {number}
 */
proto.grakn.protocol.Transaction.Open.Res.prototype.getProcessingTimeMillis = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.grakn.protocol.Transaction.Open.Res} returns this
 */
proto.grakn.protocol.Transaction.Open.Res.prototype.setProcessingTimeMillis = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grakn.protocol.Transaction.Commit.prototype.toObject = function(opt_includeInstance) {
  return proto.grakn.protocol.Transaction.Commit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grakn.protocol.Transaction.Commit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Transaction.Commit.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grakn.protocol.Transaction.Commit}
 */
proto.grakn.protocol.Transaction.Commit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grakn.protocol.Transaction.Commit;
  return proto.grakn.protocol.Transaction.Commit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grakn.protocol.Transaction.Commit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grakn.protocol.Transaction.Commit}
 */
proto.grakn.protocol.Transaction.Commit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grakn.protocol.Transaction.Commit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grakn.protocol.Transaction.Commit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grakn.protocol.Transaction.Commit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Transaction.Commit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grakn.protocol.Transaction.Commit.Req.prototype.toObject = function(opt_includeInstance) {
  return proto.grakn.protocol.Transaction.Commit.Req.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grakn.protocol.Transaction.Commit.Req} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Transaction.Commit.Req.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grakn.protocol.Transaction.Commit.Req}
 */
proto.grakn.protocol.Transaction.Commit.Req.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grakn.protocol.Transaction.Commit.Req;
  return proto.grakn.protocol.Transaction.Commit.Req.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grakn.protocol.Transaction.Commit.Req} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grakn.protocol.Transaction.Commit.Req}
 */
proto.grakn.protocol.Transaction.Commit.Req.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grakn.protocol.Transaction.Commit.Req.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grakn.protocol.Transaction.Commit.Req.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grakn.protocol.Transaction.Commit.Req} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Transaction.Commit.Req.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grakn.protocol.Transaction.Commit.Res.prototype.toObject = function(opt_includeInstance) {
  return proto.grakn.protocol.Transaction.Commit.Res.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grakn.protocol.Transaction.Commit.Res} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Transaction.Commit.Res.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grakn.protocol.Transaction.Commit.Res}
 */
proto.grakn.protocol.Transaction.Commit.Res.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grakn.protocol.Transaction.Commit.Res;
  return proto.grakn.protocol.Transaction.Commit.Res.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grakn.protocol.Transaction.Commit.Res} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grakn.protocol.Transaction.Commit.Res}
 */
proto.grakn.protocol.Transaction.Commit.Res.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grakn.protocol.Transaction.Commit.Res.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grakn.protocol.Transaction.Commit.Res.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grakn.protocol.Transaction.Commit.Res} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Transaction.Commit.Res.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grakn.protocol.Transaction.Rollback.prototype.toObject = function(opt_includeInstance) {
  return proto.grakn.protocol.Transaction.Rollback.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grakn.protocol.Transaction.Rollback} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Transaction.Rollback.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grakn.protocol.Transaction.Rollback}
 */
proto.grakn.protocol.Transaction.Rollback.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grakn.protocol.Transaction.Rollback;
  return proto.grakn.protocol.Transaction.Rollback.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grakn.protocol.Transaction.Rollback} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grakn.protocol.Transaction.Rollback}
 */
proto.grakn.protocol.Transaction.Rollback.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grakn.protocol.Transaction.Rollback.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grakn.protocol.Transaction.Rollback.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grakn.protocol.Transaction.Rollback} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Transaction.Rollback.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grakn.protocol.Transaction.Rollback.Req.prototype.toObject = function(opt_includeInstance) {
  return proto.grakn.protocol.Transaction.Rollback.Req.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grakn.protocol.Transaction.Rollback.Req} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Transaction.Rollback.Req.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grakn.protocol.Transaction.Rollback.Req}
 */
proto.grakn.protocol.Transaction.Rollback.Req.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grakn.protocol.Transaction.Rollback.Req;
  return proto.grakn.protocol.Transaction.Rollback.Req.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grakn.protocol.Transaction.Rollback.Req} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grakn.protocol.Transaction.Rollback.Req}
 */
proto.grakn.protocol.Transaction.Rollback.Req.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grakn.protocol.Transaction.Rollback.Req.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grakn.protocol.Transaction.Rollback.Req.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grakn.protocol.Transaction.Rollback.Req} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Transaction.Rollback.Req.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grakn.protocol.Transaction.Rollback.Res.prototype.toObject = function(opt_includeInstance) {
  return proto.grakn.protocol.Transaction.Rollback.Res.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grakn.protocol.Transaction.Rollback.Res} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Transaction.Rollback.Res.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grakn.protocol.Transaction.Rollback.Res}
 */
proto.grakn.protocol.Transaction.Rollback.Res.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grakn.protocol.Transaction.Rollback.Res;
  return proto.grakn.protocol.Transaction.Rollback.Res.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grakn.protocol.Transaction.Rollback.Res} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grakn.protocol.Transaction.Rollback.Res}
 */
proto.grakn.protocol.Transaction.Rollback.Res.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grakn.protocol.Transaction.Rollback.Res.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grakn.protocol.Transaction.Rollback.Res.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grakn.protocol.Transaction.Rollback.Res} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grakn.protocol.Transaction.Rollback.Res.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.grakn.protocol);
