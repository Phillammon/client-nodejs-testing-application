/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define("grakn-client/GraknOptions", ["require", "exports"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.GraknOptions = void 0;
    class GraknOptions {
        constructor() {
            this._infer = null;
            this._explain = null;
            this._batchSize = null;
        }
        infer() {
            return this._infer;
        }
        set_infer(infer) {
            this._infer = infer;
            return this;
        }
        explain() {
            return this._explain;
        }
        set_explain(explain) {
            this._explain = explain;
            return this;
        }
        batchSize() {
            return this._batchSize;
        }
        set_batchSize(batchSize) {
            if (batchSize < 1) {
                throw "Attempted to set nonpositive batch size.";
            }
            this._batchSize = batchSize;
            return this;
        }
    }
    exports.GraknOptions = GraknOptions;
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR3Jha25PcHRpb25zLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vR3Jha25PcHRpb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7OztHQWlCRzs7Ozs7Ozs7Ozs7OztJQUlILE1BQWEsWUFBWTtRQUtyQjtZQUNJLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO1lBQ25CLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDO1lBQ3JCLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDO1FBQzNCLENBQUM7UUFFTSxLQUFLO1lBQ1IsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO1FBQ3ZCLENBQUM7UUFFTSxTQUFTLENBQUMsS0FBYztZQUMzQixJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztZQUNwQixPQUFPLElBQUksQ0FBQztRQUNoQixDQUFDO1FBRU0sT0FBTztZQUNWLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUN6QixDQUFDO1FBRU0sV0FBVyxDQUFDLE9BQWdCO1lBQy9CLElBQUksQ0FBQyxRQUFRLEdBQUcsT0FBTyxDQUFDO1lBQ3hCLE9BQU8sSUFBSSxDQUFDO1FBQ2hCLENBQUM7UUFFTSxTQUFTO1lBQ1osT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDO1FBQzNCLENBQUM7UUFFTSxhQUFhLENBQUMsU0FBaUI7WUFDbEMsSUFBSSxTQUFTLEdBQUcsQ0FBQyxFQUFFO2dCQUNmLE1BQU0sMENBQTBDLENBQUE7YUFDbkQ7WUFDRCxJQUFJLENBQUMsVUFBVSxHQUFHLFNBQVMsQ0FBQztZQUM1QixPQUFPLElBQUksQ0FBQztRQUNoQixDQUFDO0tBQ0o7SUF4Q0Qsb0NBd0NDIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuICogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiAqIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiAqIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiAqIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuICogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiAqIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4gKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiAqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7Q3JlYXRlR3Jha25FcnJvcn0gZnJvbSBcIi4vY29tbW9uL0V4Y2VwdGlvbnNcIjtcblxuZXhwb3J0IGNsYXNzIEdyYWtuT3B0aW9ucyB7XG4gICAgcHJpdmF0ZSBfaW5mZXI6ICAgICAgYm9vbGVhbiB8IG51bGw7XG4gICAgcHJpdmF0ZSBfZXhwbGFpbjogICAgYm9vbGVhbiB8IG51bGw7XG4gICAgcHJpdmF0ZSBfYmF0Y2hTaXplOiAgbnVtYmVyICB8IG51bGw7XG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5faW5mZXIgPSBudWxsO1xuICAgICAgICB0aGlzLl9leHBsYWluID0gbnVsbDtcbiAgICAgICAgdGhpcy5fYmF0Y2hTaXplID0gbnVsbDtcbiAgICB9XG5cbiAgICBwdWJsaWMgaW5mZXIoKTogYm9vbGVhbiB8IG51bGwge1xuICAgICAgICByZXR1cm4gdGhpcy5faW5mZXI7XG4gICAgfVxuXG4gICAgcHVibGljIHNldF9pbmZlcihpbmZlcjogYm9vbGVhbik6IEdyYWtuT3B0aW9ucyB7XG4gICAgICAgIHRoaXMuX2luZmVyID0gaW5mZXI7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cblxuICAgIHB1YmxpYyBleHBsYWluKCk6IGJvb2xlYW4gfCBudWxsIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2V4cGxhaW47XG4gICAgfVxuXG4gICAgcHVibGljIHNldF9leHBsYWluKGV4cGxhaW46IGJvb2xlYW4pOiBHcmFrbk9wdGlvbnMge1xuICAgICAgICB0aGlzLl9leHBsYWluID0gZXhwbGFpbjtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuXG4gICAgcHVibGljIGJhdGNoU2l6ZSgpOiBudW1iZXIgfCBudWxsIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2JhdGNoU2l6ZTtcbiAgICB9XG5cbiAgICBwdWJsaWMgc2V0X2JhdGNoU2l6ZShiYXRjaFNpemU6IG51bWJlcik6IEdyYWtuT3B0aW9ucyB7XG4gICAgICAgIGlmIChiYXRjaFNpemUgPCAxKSB7XG4gICAgICAgICAgICB0aHJvdyBcIkF0dGVtcHRlZCB0byBzZXQgbm9ucG9zaXRpdmUgYmF0Y2ggc2l6ZS5cIlxuICAgICAgICB9XG4gICAgICAgIHRoaXMuX2JhdGNoU2l6ZSA9IGJhdGNoU2l6ZTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxufSJdfQ==