/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define("grakn-client/rpc/GraknClient", ["require", "exports", "@grpc/grpc-js", "grakn-client/rpc/RPCDatabaseManager", "graknlabs-grpc-protocol/protobuf/grakn_grpc_pb", "grakn-client/rpc/RPCSession"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.GraknClient = exports.DEFAULT_URI = void 0;
    const grpc_js_1 = require("@grpc/grpc-js");
    const RPCDatabaseManager_1 = require("grakn-client/rpc/RPCDatabaseManager");
    const grakn_grpc_pb_1 = require("graknlabs-grpc-protocol/protobuf/grakn_grpc_pb");
    const RPCSession_1 = require("grakn-client/rpc/RPCSession");
    exports.DEFAULT_URI = "localhost:1729";
    class GraknClient {
        constructor(address = exports.DEFAULT_URI) {
            this._graknGrpc = new grakn_grpc_pb_1.GraknClient(address, grpc_js_1.ChannelCredentials.createInsecure());
            this._databases = new RPCDatabaseManager_1.RPCDatabaseManager(this._graknGrpc);
        }
        session(database, type, options) {
            return __awaiter(this, void 0, void 0, function* () {
                const session = new RPCSession_1.RPCSession(this._graknGrpc, database, type);
                return session.open(options);
            });
        }
        databases() {
            return this._databases;
        }
        close() {
            grpc_js_1.closeClient(this._graknGrpc);
        }
    }
    exports.GraknClient = GraknClient;
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR3Jha25DbGllbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9ycGMvR3Jha25DbGllbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBaUJHOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBSUgsMkNBQThEO0lBQzlELDRFQUF3RDtJQUN4RCxrRkFBd0Y7SUFDeEYsNERBQXdDO0lBRTNCLFFBQUEsV0FBVyxHQUFHLGdCQUFnQixDQUFDO0lBRTVDLE1BQWEsV0FBVztRQUlwQixZQUFZLE9BQU8sR0FBRyxtQkFBVztZQUM3QixJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksMkJBQVMsQ0FBQyxPQUFPLEVBQUUsNEJBQWtCLENBQUMsY0FBYyxFQUFFLENBQUMsQ0FBQztZQUM5RSxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksdUNBQWtCLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQzlELENBQUM7UUFFSyxPQUFPLENBQUMsUUFBZ0IsRUFBRSxJQUF1QixFQUFFLE9BQXNCOztnQkFDM0UsTUFBTSxPQUFPLEdBQUcsSUFBSSx1QkFBVSxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUUsUUFBUSxFQUFFLElBQUksQ0FBQyxDQUFDO2dCQUNoRSxPQUFPLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7WUFDakMsQ0FBQztTQUFBO1FBRUQsU0FBUztZQUNMLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQztRQUMzQixDQUFDO1FBRUQsS0FBSztZQUNELHFCQUFXLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQ2pDLENBQUM7S0FDSjtJQXJCRCxrQ0FxQkMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4gKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuICogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuICogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuICogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4gKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4gKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuICogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuICogdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHtHcmFrbn0gZnJvbSBcIi4uL0dyYWtuXCJcbmltcG9ydCB7R3Jha25PcHRpb25zfSBmcm9tIFwiLi4vR3Jha25PcHRpb25zXCI7XG5pbXBvcnQge0NoYW5uZWxDcmVkZW50aWFscywgY2xvc2VDbGllbnR9IGZyb20gXCJAZ3JwYy9ncnBjLWpzXCI7XG5pbXBvcnQge1JQQ0RhdGFiYXNlTWFuYWdlcn0gZnJvbSBcIi4vUlBDRGF0YWJhc2VNYW5hZ2VyXCI7XG5pbXBvcnQge0dyYWtuQ2xpZW50IGFzIEdyYWtuR3JwY30gZnJvbSBcImdyYWtubGFicy1ncnBjLXByb3RvY29sL3Byb3RvYnVmL2dyYWtuX2dycGNfcGJcIjtcbmltcG9ydCB7UlBDU2Vzc2lvbn0gZnJvbSBcIi4vUlBDU2Vzc2lvblwiO1xuXG5leHBvcnQgY29uc3QgREVGQVVMVF9VUkkgPSBcImxvY2FsaG9zdDoxNzI5XCI7XG5cbmV4cG9ydCBjbGFzcyBHcmFrbkNsaWVudCBpbXBsZW1lbnRzIEdyYWtuLkNsaWVudCB7XG4gICAgcHJpdmF0ZSByZWFkb25seSBfZGF0YWJhc2VzOiBHcmFrbi5EYXRhYmFzZU1hbmFnZXI7XG4gICAgcHJpdmF0ZSByZWFkb25seSBfZ3Jha25HcnBjOiBHcmFrbkdycGM7XG5cbiAgICBjb25zdHJ1Y3RvcihhZGRyZXNzID0gREVGQVVMVF9VUkkpIHtcbiAgICAgICAgdGhpcy5fZ3Jha25HcnBjID0gbmV3IEdyYWtuR3JwYyhhZGRyZXNzLCBDaGFubmVsQ3JlZGVudGlhbHMuY3JlYXRlSW5zZWN1cmUoKSk7XG4gICAgICAgIHRoaXMuX2RhdGFiYXNlcyA9IG5ldyBSUENEYXRhYmFzZU1hbmFnZXIodGhpcy5fZ3Jha25HcnBjKTtcbiAgICB9XG5cbiAgICBhc3luYyBzZXNzaW9uKGRhdGFiYXNlOiBzdHJpbmcsIHR5cGU6IEdyYWtuLlNlc3Npb25UeXBlLCBvcHRpb25zPzogR3Jha25PcHRpb25zKTogUHJvbWlzZTxHcmFrbi5TZXNzaW9uPiB7XG4gICAgICAgIGNvbnN0IHNlc3Npb24gPSBuZXcgUlBDU2Vzc2lvbih0aGlzLl9ncmFrbkdycGMsIGRhdGFiYXNlLCB0eXBlKTtcbiAgICAgICAgcmV0dXJuIHNlc3Npb24ub3BlbihvcHRpb25zKTtcbiAgICB9XG5cbiAgICBkYXRhYmFzZXMoKTogR3Jha24uRGF0YWJhc2VNYW5hZ2VyIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2RhdGFiYXNlcztcbiAgICB9XG5cbiAgICBjbG9zZSgpOiB2b2lkIHtcbiAgICAgICAgY2xvc2VDbGllbnQodGhpcy5fZ3Jha25HcnBjKTtcbiAgICB9XG59XG4iXX0=