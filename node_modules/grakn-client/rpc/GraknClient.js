/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define("grakn-client/rpc/GraknClient", ["require", "exports", "grakn-client/dependencies_internal", "@grpc/grpc-js", "graknlabs-grpc-protocol/protobuf/grakn_grpc_pb"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.GraknClient = exports.DEFAULT_URI = void 0;
    const dependencies_internal_1 = require("grakn-client/dependencies_internal");
    const grpc_js_1 = require("@grpc/grpc-js");
    const grakn_grpc_pb_1 = require("graknlabs-grpc-protocol/protobuf/grakn_grpc_pb");
    exports.DEFAULT_URI = "localhost:1729";
    class GraknClient {
        constructor(address = exports.DEFAULT_URI) {
            this._graknGrpc = new grakn_grpc_pb_1.GraknClient(address, grpc_js_1.ChannelCredentials.createInsecure());
            this._databases = new dependencies_internal_1.RPCDatabaseManager(this._graknGrpc);
        }
        session(database, type, options) {
            return __awaiter(this, void 0, void 0, function* () {
                const session = new dependencies_internal_1.RPCSession(this._graknGrpc, database, type);
                return session.open(options);
            });
        }
        databases() {
            return this._databases;
        }
        close() {
            grpc_js_1.closeClient(this._graknGrpc);
        }
    }
    exports.GraknClient = GraknClient;
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR3Jha25DbGllbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9ycGMvR3Jha25DbGllbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBaUJHOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBRUgsOEVBS2tDO0lBQ2xDLDJDQUE4RDtJQUM5RCxrRkFBd0Y7SUFFM0UsUUFBQSxXQUFXLEdBQUcsZ0JBQWdCLENBQUM7SUFFNUMsTUFBYSxXQUFXO1FBSXBCLFlBQVksT0FBTyxHQUFHLG1CQUFXO1lBQzdCLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSwyQkFBUyxDQUFDLE9BQU8sRUFBRSw0QkFBa0IsQ0FBQyxjQUFjLEVBQUUsQ0FBQyxDQUFDO1lBQzlFLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSwwQ0FBa0IsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDOUQsQ0FBQztRQUVLLE9BQU8sQ0FBQyxRQUFnQixFQUFFLElBQXVCLEVBQUUsT0FBc0I7O2dCQUMzRSxNQUFNLE9BQU8sR0FBRyxJQUFJLGtDQUFVLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxRQUFRLEVBQUUsSUFBSSxDQUFDLENBQUM7Z0JBQ2hFLE9BQU8sT0FBTyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztZQUNqQyxDQUFDO1NBQUE7UUFFRCxTQUFTO1lBQ0wsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDO1FBQzNCLENBQUM7UUFFRCxLQUFLO1lBQ0QscUJBQVcsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDakMsQ0FBQztLQUNKO0lBckJELGtDQXFCQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4gKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiAqIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4gKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4gKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4gKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2VcbiAqIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiAqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4gKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuICogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4gKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4gKiB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQge1xuICAgIEdyYWtuLFxuICAgIEdyYWtuT3B0aW9ucyxcbiAgICBSUENEYXRhYmFzZU1hbmFnZXIsXG4gICAgUlBDU2Vzc2lvbixcbn0gZnJvbSBcIi4uL2RlcGVuZGVuY2llc19pbnRlcm5hbFwiO1xuaW1wb3J0IHtDaGFubmVsQ3JlZGVudGlhbHMsIGNsb3NlQ2xpZW50fSBmcm9tIFwiQGdycGMvZ3JwYy1qc1wiO1xuaW1wb3J0IHtHcmFrbkNsaWVudCBhcyBHcmFrbkdycGN9IGZyb20gXCJncmFrbmxhYnMtZ3JwYy1wcm90b2NvbC9wcm90b2J1Zi9ncmFrbl9ncnBjX3BiXCI7XG5cbmV4cG9ydCBjb25zdCBERUZBVUxUX1VSSSA9IFwibG9jYWxob3N0OjE3MjlcIjtcblxuZXhwb3J0IGNsYXNzIEdyYWtuQ2xpZW50IGltcGxlbWVudHMgR3Jha24uQ2xpZW50IHtcbiAgICBwcml2YXRlIHJlYWRvbmx5IF9kYXRhYmFzZXM6IEdyYWtuLkRhdGFiYXNlTWFuYWdlcjtcbiAgICBwcml2YXRlIHJlYWRvbmx5IF9ncmFrbkdycGM6IEdyYWtuR3JwYztcblxuICAgIGNvbnN0cnVjdG9yKGFkZHJlc3MgPSBERUZBVUxUX1VSSSkge1xuICAgICAgICB0aGlzLl9ncmFrbkdycGMgPSBuZXcgR3Jha25HcnBjKGFkZHJlc3MsIENoYW5uZWxDcmVkZW50aWFscy5jcmVhdGVJbnNlY3VyZSgpKTtcbiAgICAgICAgdGhpcy5fZGF0YWJhc2VzID0gbmV3IFJQQ0RhdGFiYXNlTWFuYWdlcih0aGlzLl9ncmFrbkdycGMpO1xuICAgIH1cblxuICAgIGFzeW5jIHNlc3Npb24oZGF0YWJhc2U6IHN0cmluZywgdHlwZTogR3Jha24uU2Vzc2lvblR5cGUsIG9wdGlvbnM/OiBHcmFrbk9wdGlvbnMpOiBQcm9taXNlPEdyYWtuLlNlc3Npb24+IHtcbiAgICAgICAgY29uc3Qgc2Vzc2lvbiA9IG5ldyBSUENTZXNzaW9uKHRoaXMuX2dyYWtuR3JwYywgZGF0YWJhc2UsIHR5cGUpO1xuICAgICAgICByZXR1cm4gc2Vzc2lvbi5vcGVuKG9wdGlvbnMpO1xuICAgIH1cblxuICAgIGRhdGFiYXNlcygpOiBHcmFrbi5EYXRhYmFzZU1hbmFnZXIge1xuICAgICAgICByZXR1cm4gdGhpcy5fZGF0YWJhc2VzO1xuICAgIH1cblxuICAgIGNsb3NlKCk6IHZvaWQge1xuICAgICAgICBjbG9zZUNsaWVudCh0aGlzLl9ncmFrbkdycGMpO1xuICAgIH1cbn1cbiJdfQ==