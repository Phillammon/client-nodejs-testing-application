/// <amd-module name="grakn-client/rpc/Stream" />
import { ClientWritableStream } from "@grpc/grpc-js";
import TransactionProto from "graknlabs-grpc-protocol/protobuf/transaction_pb";
import { ResponseCollector } from "./RPCTransaction";
export declare class Stream<T> implements Iterable<Promise<T>> {
    private readonly _requestId;
    private readonly _writableStream;
    private readonly _responseCollector;
    private readonly _transformResponse;
    private _receivedAnswers;
    constructor(requestId: string, writableStream: ClientWritableStream<TransactionProto.Transaction.Req>, responseCollector: ResponseCollector, transformResponse: (res: TransactionProto.Transaction.Res) => T[]);
    [Symbol.iterator](): Iterator<Promise<T>>;
    next(): Promise<T>;
    collect(): Promise<T[]>;
}
