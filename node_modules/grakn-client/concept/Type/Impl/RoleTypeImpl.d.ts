/// <amd-module name="grakn-client/concept/Type/Impl/RoleTypeImpl" />
import { ThingTypeImpl, RemoteThingTypeImpl } from "./ThingTypeImpl";
import { RoleType, RemoteRoleType } from "../RoleType";
import { Type as TypeProto } from "graknlabs-grpc-protocol/protobuf/concept_pb";
import { Grakn } from "../../../Grakn";
import Transaction = Grakn.Transaction;
import { RelationTypeImpl } from "./RelationTypeImpl";
import { Stream } from "../../../rpc/Stream";
export declare class RoleTypeImpl extends ThingTypeImpl implements RoleType {
    private readonly _scope;
    protected constructor(label: string, scope: string, isRoot: boolean);
    static of(typeProto: TypeProto): RoleTypeImpl;
    getScope(): string;
    asRemote(transaction: Transaction): RemoteRoleType;
    toString(): string;
}
export declare class RemoteRoleTypeImpl extends RemoteThingTypeImpl implements RemoteRoleType {
    private readonly _scope;
    constructor(transaction: Transaction, label: string, scope: string, isRoot: boolean);
    getSupertype(): RoleTypeImpl;
    getSupertypes(): Stream<any>;
    getSubtypes(): Stream<any>;
    getScope(): string;
    asRemote(transaction: Transaction): RemoteRoleTypeImpl;
    getRelation(): RelationTypeImpl;
    getRelations(): Stream<any>;
    getPlayers(): Stream<any>;
    toString(): string;
}
