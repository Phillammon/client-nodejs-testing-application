/// <amd-module name="grakn-client/concept/Type/Impl/RuleImpl" />
import { RemoteRule, Rule } from "../Rule";
import { Rule as RuleProto } from "graknlabs-grpc-protocol/protobuf/concept_pb";
import { Grakn } from "../../../Grakn";
import Transaction = Grakn.Transaction;
export declare class RuleImpl implements Rule {
    private readonly _label;
    private readonly _when;
    private readonly _then;
    protected constructor(label: string, when: string, then: string);
    static of(ruleProto: RuleProto): RuleImpl;
    getLabel(): string;
    getThen(): string;
    getWhen(): string;
    asRemote(transaction: Transaction): RemoteRule;
    toString(): string;
}
export declare class RemoteRuleImpl implements RemoteRule {
    private _label;
    private readonly _when;
    private readonly _then;
    private readonly _transaction;
    constructor(transaction: Transaction, label: string, when: string, then: string);
    getLabel(): string;
    getThen(): string;
    getWhen(): string;
    setLabel(label: string): void;
    delete(): void;
    isDeleted(): boolean;
    asRemote(transaction: Transaction): RemoteRule;
    protected get transaction(): Transaction;
}
