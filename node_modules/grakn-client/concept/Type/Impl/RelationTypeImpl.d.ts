/// <amd-module name="grakn-client/concept/Type/Impl/RelationTypeImpl" />
import { ThingTypeImpl, RemoteThingTypeImpl } from "./ThingTypeImpl";
import { Relation } from "../../Thing/Relation";
import { RelationType, RemoteRelationType } from "../RelationType";
import { RoleType } from "../RoleType";
import { Grakn } from "../../../Grakn";
import Transaction = Grakn.Transaction;
import { Type as TypeProto } from "graknlabs-grpc-protocol/protobuf/concept_pb";
import { Stream } from "../../../rpc/Stream";
export declare class RelationTypeImpl extends ThingTypeImpl implements RelationType {
    protected constructor(label: string, isRoot: boolean);
    static of(typeProto: TypeProto): RelationTypeImpl;
    asRemote(transaction: Transaction): RemoteRelationTypeImpl;
}
export declare class RemoteRelationTypeImpl extends RemoteThingTypeImpl implements RemoteRelationType {
    constructor(transaction: Transaction, label: string, isRoot: boolean);
    getInstances(): Stream<any>;
    asRemote(transaction: Transaction): RemoteRelationTypeImpl;
    getSupertype(): RelationTypeImpl;
    getSupertypes(): Stream<any>;
    getSubtypes(): Stream<any>;
    setSupertype(superRelationType: RelationType): void;
    create(): Relation;
    getRelates(roleLabel: string): RoleType;
    getRelates(): Stream<any>;
    setRelates(roleLabel: string): void;
    setRelates(roleLabel: string, overriddenLabel: string): void;
    unsetRelates(roleLabel: string): void;
}
