/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define("grakn-client/concept/Proto/ConceptProtoReader", ["require", "exports", "graknlabs-grpc-protocol/protobuf/concept_pb", "grakn-client/concept/Thing/Impl/EntityImpl", "grakn-client/concept/Thing/Impl/RelationImpl", "grakn-client/concept/Thing/Impl/AttributeImpl"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ConceptProtoReader = void 0;
    const concept_pb_1 = __importDefault(require("graknlabs-grpc-protocol/protobuf/concept_pb"));
    const EntityImpl_1 = require("grakn-client/concept/Thing/Impl/EntityImpl");
    const RelationImpl_1 = require("grakn-client/concept/Thing/Impl/RelationImpl");
    const AttributeImpl_1 = require("grakn-client/concept/Thing/Impl/AttributeImpl");
    var ConceptProtoReader;
    (function (ConceptProtoReader) {
        function thing(thingProto) {
            switch (thingProto.getEncoding()) {
                case concept_pb_1.default.Thing.ENCODING.ENTITY:
                    return EntityImpl_1.EntityImpl.of(thingProto);
                case concept_pb_1.default.Thing.ENCODING.RELATION:
                    return RelationImpl_1.RelationImpl.of(thingProto);
                case concept_pb_1.default.Thing.ENCODING.ATTRIBUTE:
                    return AttributeImpl_1.AttributeImpl.of(thingProto);
                default:
                    throw "Bad encoding";
            }
        }
        ConceptProtoReader.thing = thing;
    })(ConceptProtoReader = exports.ConceptProtoReader || (exports.ConceptProtoReader = {}));
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29uY2VwdFByb3RvUmVhZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vY29uY2VwdC9Qcm90by9Db25jZXB0UHJvdG9SZWFkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBaUJHOzs7Ozs7Ozs7Ozs7Ozs7O0lBRUgsNkZBQXVFO0lBRXZFLDJFQUFzRDtJQUN0RCwrRUFBMEQ7SUFDMUQsaUZBQTREO0lBRTVELElBQWlCLGtCQUFrQixDQWFsQztJQWJELFdBQWlCLGtCQUFrQjtRQUMvQixTQUFnQixLQUFLLENBQUMsVUFBOEI7WUFDaEQsUUFBUSxVQUFVLENBQUMsV0FBVyxFQUFFLEVBQUU7Z0JBQzlCLEtBQUssb0JBQVksQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLE1BQU07b0JBQ25DLE9BQU8sdUJBQVUsQ0FBQyxFQUFFLENBQUMsVUFBVSxDQUFDLENBQUM7Z0JBQ3JDLEtBQUssb0JBQVksQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLFFBQVE7b0JBQ3JDLE9BQU8sMkJBQVksQ0FBQyxFQUFFLENBQUMsVUFBVSxDQUFDLENBQUM7Z0JBQ3ZDLEtBQUssb0JBQVksQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLFNBQVM7b0JBQ3RDLE9BQU8sNkJBQWEsQ0FBQyxFQUFFLENBQUMsVUFBVSxDQUFDLENBQUM7Z0JBQ3hDO29CQUNJLE1BQU0sY0FBYyxDQUFBO2FBQzNCO1FBQ0wsQ0FBQztRQVhlLHdCQUFLLFFBV3BCLENBQUE7SUFDTCxDQUFDLEVBYmdCLGtCQUFrQixHQUFsQiwwQkFBa0IsS0FBbEIsMEJBQWtCLFFBYWxDIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuICogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiAqIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiAqIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiAqIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuICogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiAqIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4gKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiAqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCBDb25jZXB0UHJvdG8gZnJvbSBcImdyYWtubGFicy1ncnBjLXByb3RvY29sL3Byb3RvYnVmL2NvbmNlcHRfcGJcIjtcbmltcG9ydCB7IFRoaW5nSW1wbCB9IGZyb20gXCIuLi9UaGluZy9JbXBsL1RoaW5nSW1wbFwiO1xuaW1wb3J0IHsgRW50aXR5SW1wbCB9IGZyb20gXCIuLi9UaGluZy9JbXBsL0VudGl0eUltcGxcIjtcbmltcG9ydCB7IFJlbGF0aW9uSW1wbCB9IGZyb20gXCIuLi9UaGluZy9JbXBsL1JlbGF0aW9uSW1wbFwiO1xuaW1wb3J0IHsgQXR0cmlidXRlSW1wbCB9IGZyb20gXCIuLi9UaGluZy9JbXBsL0F0dHJpYnV0ZUltcGxcIjtcblxuZXhwb3J0IG5hbWVzcGFjZSBDb25jZXB0UHJvdG9SZWFkZXIge1xuICAgIGV4cG9ydCBmdW5jdGlvbiB0aGluZyh0aGluZ1Byb3RvOiBDb25jZXB0UHJvdG8uVGhpbmcpOiBUaGluZ0ltcGwge1xuICAgICAgICBzd2l0Y2ggKHRoaW5nUHJvdG8uZ2V0RW5jb2RpbmcoKSkge1xuICAgICAgICAgICAgY2FzZSBDb25jZXB0UHJvdG8uVGhpbmcuRU5DT0RJTkcuRU5USVRZOlxuICAgICAgICAgICAgICAgIHJldHVybiBFbnRpdHlJbXBsLm9mKHRoaW5nUHJvdG8pO1xuICAgICAgICAgICAgY2FzZSBDb25jZXB0UHJvdG8uVGhpbmcuRU5DT0RJTkcuUkVMQVRJT046XG4gICAgICAgICAgICAgICAgcmV0dXJuIFJlbGF0aW9uSW1wbC5vZih0aGluZ1Byb3RvKTtcbiAgICAgICAgICAgIGNhc2UgQ29uY2VwdFByb3RvLlRoaW5nLkVOQ09ESU5HLkFUVFJJQlVURTpcbiAgICAgICAgICAgICAgICByZXR1cm4gQXR0cmlidXRlSW1wbC5vZih0aGluZ1Byb3RvKTtcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgdGhyb3cgXCJCYWQgZW5jb2RpbmdcIlxuICAgICAgICB9XG4gICAgfVxufVxuIl19