/// <amd-module name="grakn-client/concept/Thing/Impl/RelationImpl" />
import { ThingImpl, RemoteThingImpl } from "./ThingImpl";
import { Relation, RemoteRelation } from "../Relation";
import { Thing } from "../Thing";
import { RelationTypeImpl } from "../../Type/Impl/RelationTypeImpl";
import { RoleType } from "../../Type/RoleType";
import { QueryIterator } from "../../Concept";
import { Grakn } from "../../../Grakn";
import Transaction = Grakn.Transaction;
import ConceptProto from "graknlabs-grpc-protocol/protobuf/concept_pb";
export declare class RelationImpl extends ThingImpl implements Relation {
    protected constructor(iid: string);
    static of(protoThing: ConceptProto.Thing): RelationImpl;
    asRemote(transaction: Transaction): RemoteRelationImpl;
}
export declare class RemoteRelationImpl extends RemoteThingImpl implements RemoteRelation {
    constructor(transaction: Transaction, iid: string);
    asRemote(transaction: Transaction): RemoteRelationImpl;
    getType(): RelationTypeImpl;
    getPlayersByRoleType(): [RoleType, Thing[]];
    getPlayers(roleTypes: RoleType[]): QueryIterator;
    addPlayer(roleType: RoleType, player: Thing): void;
    removePlayer(roleType: RoleType, player: Thing): void;
}
